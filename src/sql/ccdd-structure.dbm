<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.0" last-position="1202,0" last-zoom="0.95"
	 default-owner="postgres">
<database name="sandbox">
</database>

<schema name="public" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<table name="dpd_drug">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="280" y="420"/>
	<column name="code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="din">
		<type name="varchar" length="0"/>
	</column>
	<column name="brand_name_en">
		<type name="varchar" length="0"/>
	</column>
	<column name="company_name">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="dpd_drug_pk" type="pk-constr" table="public.dpd_drug">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="dpd_ingredient">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="740" y="40"/>

	<customidxs object-type="column">
		<object name="dpd_named_ingredient_name" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_ingredient_pk" index="0"/>
		<object name="dpd_named_ingredient_fk" index="1"/>
	</customidxs>
</table>

<table name="dpd_named_ingredient">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1140" y="140"/>
	<column name="name" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="dpd_named_ingredient_pk" type="pk-constr" table="public.dpd_named_ingredient">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<relationship name="dpd_ingredient_name" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_named_ingredient"
	 dst-table="public.dpd_ingredient"
	 src-required="true" dst-required="false">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
	<special-pk-cols indexes="0"/>
</relationship>

<table name="dpd_drug_ingredient">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="560" y="240"/>

	<customidxs object-type="column">
		<object name="dpd_drug_code" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_drug_fk" index="0"/>
		<object name="dpd_drug_ingredient_pk" index="1"/>
	</customidxs>
</table>

<relationship name="dpd_drug_ingredient_drug" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug"
	 dst-table="public.dpd_drug_ingredient"
	 src-required="true" dst-required="false">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
	<special-pk-cols indexes="0"/>
</relationship>

<table name="dpd_active_ingredient_code">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1300" y="20"/>
	<column name="id" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="dpd_active_ingredient_code_pk" type="pk-constr" table="public.dpd_active_ingredient_code">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<relationship name="dpd_active_ingredient_code_has_many_dpd_ingredient" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_active_ingredient_code"
	 dst-table="public.dpd_ingredient"
	 src-required="true" dst-required="false">
	<special-pk-cols indexes="0"/>
</relationship>

<relationship name="dpd_drug_ingredient_ingredient" type="rel1n"
	 src-col-pattern="{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_ingredient"
	 dst-table="public.dpd_drug_ingredient"
	 src-required="true" dst-required="false">
	<special-pk-cols indexes="0,1"/>
</relationship>

<table name="ccdd_ingredient_stem">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1480" y="460"/>
	<column name="name" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="ccdd_ingredient_stem_pk" type="pk-constr" table="public.ccdd_ingredient_stem">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ccdd_ntp_ingredient">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1460" y="300"/>
	<column name="name" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="ccdd_ntp_ingredient_pk" type="pk-constr" table="public.ccdd_ntp_ingredient">
		<columns names="name" ref-type="src-columns"/>
	</constraint>

	<customidxs object-type="column">
		<object name="ccdd_ingredient_stem_name" index="1"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_ingredient_stem_fk" index="1"/>
	</customidxs>
</table>

<relationship name="ccdd_ntp_ingredient_stem" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.ccdd_ingredient_stem"
	 dst-table="public.ccdd_ntp_ingredient"
	 src-required="true" dst-required="false">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<table name="ccdd_dpd_ingredient_ntp_mapping">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="80"/>
	<column name="ccdd">
		<type name="bool" length="0"/>
	</column>

	<customidxs object-type="column">
		<object name="dpd_named_ingredient_name" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_dpd_ingredient_ntp_mapping_uq" index="1"/>
		<object name="dpd_named_ingredient_fk" index="0"/>
	</customidxs>
</table>

<relationship name="ccdd_dpd_ingredient_ntp_mapping_dpd_named_ingredient" type="rel11"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_named_ingredient"
	 dst-table="public.ccdd_dpd_ingredient_ntp_mapping"
	 src-required="true" dst-required="false"/>

<relationship name="ccdd_dpd_ingredient_ntp_mapping_ntp_ingredient" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.ccdd_ntp_ingredient"
	 dst-table="public.ccdd_dpd_ingredient_ntp_mapping"
	 src-required="true" dst-required="false"/>

<table name="ccdd_tm">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1540" y="760"/>
	<column name="code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="tm_pk" type="pk-constr" table="public.ccdd_tm">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ccdd_dosage_form">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1500" y="960"/>
	<column name="name" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<column name="code">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="ccdd_dosage_form_pk" type="pk-constr" table="public.ccdd_dosage_form">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
	<constraint name="ccdd_dosage_form_code_unique" type="uq-constr" table="public.ccdd_dosage_form">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ccdd_dosage_form_mapping">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1120" y="860"/>
	<column name="id" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="ccdd_dosage_form_mapping_pk" type="pk-constr" table="public.ccdd_dosage_form_mapping">
		<columns names="id" ref-type="src-columns"/>
	</constraint>

	<customidxs object-type="column">
		<object name="ccdd_dosage_form_name" index="1"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_dosage_form_fk" index="1"/>
	</customidxs>
</table>

<relationship name="ccdd_dosage_form_mapping_dosage_form" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.ccdd_dosage_form"
	 dst-table="public.ccdd_dosage_form_mapping"
	 src-required="true" dst-required="false">
	<label ref-type="name-label">
		<position x="2.76535" y="-4.56066"/>
	</label>
</relationship>

<table name="dpd_route" hide-ext-attribs="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1260" y="420"/>
	<column name="code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="name_en">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="dpd_route_pk" type="pk-constr" table="public.dpd_route">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="dpd_form">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="560" y="660"/>
	<column name="code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="name_en">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="dpd_form_pk" type="pk-constr" table="public.dpd_form">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ccdd_combination_product">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="720" y="520"/>
	<column name="mp_formal_name">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_type">
		<type name="varchar" length="0"/>
	</column>

	<customidxs object-type="column">
		<object name="dpd_drug_code" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_combination_product_pk" index="0"/>
		<object name="ccdd_combination_product_uq" index="2"/>
		<object name="dpd_drug_fk" index="1"/>
	</customidxs>
</table>

<relationship name="ccdd_combination_product_has_one_dpd_drug" type="rel11"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug"
	 dst-table="public.ccdd_combination_product"
	 src-required="true" dst-required="false">
	<label ref-type="dst-label">
		<position x="0" y="0"/>
	</label>
	<special-pk-cols indexes="0"/>
</relationship>

<table name="ccdd_presentation">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="220" y="940"/>
	<column name="id" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<column name="unit">
		<type name="varchar" length="0"/>
	</column>
	<column name="size_amount">
		<type name="double precision" length="0"/>
	</column>
	<column name="size_unit">
		<type name="varchar" length="0"/>
	</column>
	<column name="strength_is_per_size_unit">
		<type name="bool" length="0"/>
	</column>
	<column name="unit_has_explicit_size">
		<type name="bool" length="0"/>
	</column>
	<column name="pseudodin">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="ccdd_presentation_pk" type="pk-constr" table="public.ccdd_presentation">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="ccdd_presentation_pseudodin" type="uq-constr" table="public.ccdd_presentation">
		<columns names="pseudodin" ref-type="src-columns"/>
	</constraint>

	<customidxs object-type="column">
		<object name="dpd_drug_code" index="1"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_drug_fk" index="0"/>
	</customidxs>
</table>

<relationship name="dpd_drug_has_many_ccdd_unit_of_presentation" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug"
	 dst-table="public.ccdd_presentation"
	 src-required="true" dst-required="false">
	<label ref-type="dst-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<schema name="dpd" rect-visible="true" fill-color="#83af1f" sql-disabled="true">
	<role name="postgres"/>
</schema>

<table name="active_ingredient" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="900" y="1280"/>
	<column name="extract" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="active_ingredient_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="ingredient" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="ingredient_supplied_ind">
		<type name="text" length="0"/>
	</column>
	<column name="strength" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="strength_unit" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="strength_type">
		<type name="text" length="0"/>
	</column>
	<column name="dosage_value">
		<type name="text" length="0"/>
	</column>
	<column name="base">
		<type name="text" length="0"/>
	</column>
	<column name="dosage_unit">
		<type name="text" length="0"/>
	</column>
	<column name="notes">
		<type name="text" length="0"/>
	</column>
	<column name="ingredient_f">
		<type name="text" length="0"/>
	</column>
	<column name="strength_unit_f">
		<type name="text" length="0"/>
	</column>
	<column name="strength_type_f">
		<type name="text" length="0"/>
	</column>
	<column name="dosage_unit_f">
		<type name="text" length="0"/>
	</column>
</table>

<table name="companies" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="980" y="1560"/>
	<column name="extract" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="mfr_code">
		<type name="text" length="0"/>
	</column>
	<column name="company_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="company_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="company_type">
		<type name="text" length="0"/>
	</column>
	<column name="address_mailing_flag">
		<type name="text" length="0"/>
	</column>
	<column name="address_billing_flag">
		<type name="text" length="0"/>
	</column>
	<column name="address_notification_flag">
		<type name="text" length="0"/>
	</column>
	<column name="address_other">
		<type name="text" length="0"/>
	</column>
	<column name="suite_number">
		<type name="text" length="0"/>
	</column>
	<column name="street_name">
		<type name="text" length="0"/>
	</column>
	<column name="city_name">
		<type name="text" length="0"/>
	</column>
	<column name="province">
		<type name="text" length="0"/>
	</column>
	<column name="country">
		<type name="text" length="0"/>
	</column>
	<column name="postal_code">
		<type name="text" length="0"/>
	</column>
	<column name="post_office_box">
		<type name="text" length="0"/>
	</column>
	<column name="province_f">
		<type name="text" length="0"/>
	</column>
	<column name="country_f">
		<type name="text" length="0"/>
	</column>
</table>

<table name="drug_product" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="220" y="1280"/>
	<column name="extract" not-null="true" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="product_categorization">
		<type name="text" length="0"/>
	</column>
	<column name="class">
		<type name="text" length="0"/>
	</column>
	<column name="drug_identification_number" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="brand_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="descriptor">
		<type name="text" length="0"/>
	</column>
	<column name="pediatric_flag">
		<type name="text" length="0"/>
	</column>
	<column name="accession_number">
		<type name="text" length="0"/>
	</column>
	<column name="number_of_ais">
		<type name="text" length="0"/>
	</column>
	<column name="last_update_date">
		<type name="date" length="0"/>
	</column>
	<column name="ai_group_no">
		<type name="text" length="0"/>
	</column>
	<column name="class_f">
		<type name="text" length="0"/>
	</column>
	<column name="brand_name_f">
		<type name="text" length="0"/>
	</column>
	<column name="descriptor_f">
		<type name="text" length="0"/>
	</column>
	<constraint name="drug_product_drug_code" type="pk-constr" table="dpd.drug_product">
		<columns names="extract,drug_code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="pharmaceutical_form" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="540" y="1600"/>
	<column name="extract" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="pharm_form_code">
		<type name="integer" length="0"/>
	</column>
	<column name="pharmaceutical_form">
		<type name="text" length="0"/>
	</column>
	<column name="pharmaceutical_form_f">
		<type name="text" length="0"/>
	</column>
</table>

<table name="route" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="500" y="1760"/>
	<column name="extract" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="route_of_administration_code">
		<type name="text" length="0"/>
	</column>
	<column name="route_of_administration">
		<type name="text" length="0"/>
	</column>
	<column name="route_of_administration_f">
		<type name="text" length="0"/>
	</column>
</table>

<table name="status" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="220" y="1640"/>
	<column name="extract" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="current_status_flag">
		<type name="text" length="0"/>
	</column>
	<column name="status">
		<type name="text" length="0"/>
	</column>
	<column name="history_date">
		<type name="date" length="0"/>
	</column>
	<column name="status_f">
		<type name="text" length="0"/>
	</column>
	<column name="lot_number">
		<type name="text" length="0"/>
	</column>
	<column name="expiration_date">
		<type name="text" length="0"/>
	</column>
</table>

<table name="dpd_drug_route">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="860" y="380"/>
</table>

<schema name="ccdd" rect-visible="true" fill-color="#e1e1e1">
	<role name="postgres"/>
</schema>

<table name="mp_whitelist">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2140" y="780"/>
	<column name="drug_code" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="mp_whitelist_pk" type="pk-constr" table="ccdd.mp_whitelist">
		<columns names="drug_code" ref-type="src-columns"/>
	</constraint>
</table>

<table name="ntp_deprecations">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2180" y="800"/>
	<column name="code" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="ntp_deprecations_pk" type="pk-constr" table="ccdd.ntp_deprecations">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<view name="dpd_drug_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="220" y="1140"/>
	<reference table="dpd.drug_product" column="drug_code" alias="dp" column-alias="code"/>
	<reference table="dpd.drug_product" column="drug_identification_number" alias="dp" column-alias="din"/>
	<reference table="dpd.drug_product" column="brand_name" alias="dp" column-alias="brand_name_en"/>
	<reference alias="company_name">
		<expression><![CDATA[(SELECT
   dc.company_name
FROM
   dpd.companies AS dc
WHERE
   dc.drug_code = dp.drug_code)]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[dpd.drug_product dp
LEFT JOIN dpd.status cs ON(cs.drug_code = dp.drug_code AND cs.current_status_flag = 'Y')]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[dp.class = 'Human' AND (
(
	cs.status = 'DORMANT'
	AND
	cs.history_date > (SELECT ccdd_date FROM ccdd_config LIMIT 1)
)
OR
(
	cs.status = 'CANCELLED POST MARKET'
	AND
	(
		cs.history_date > (SELECT ccdd_date FROM ccdd_config LIMIT 1)
		OR
		(CASE
			WHEN cs.expiration_date LIKE '____-__-__' THEN to_date(cs.expiration_date, 'YYYY-MM-DD')
			ELSE to_date(cs.expiration_date, 'DD-MON-YYYY')
		END) > (SELECT ccdd_date FROM ccdd_config LIMIT 1)
	)
)
OR
(
	cs.status = 'MARKETED'
)
OR
EXISTS(select * from ccdd.mp_whitelist wl where wl.drug_code = CAST(dp.drug_code as varchar))
)]]></expression>
	</reference>
	<expression type="select-exp">0,1,2,3</expression>
	<expression type="from-exp">4</expression>
	<expression type="simple-exp">5</expression>
</view>

<relationship name="rel_dpd_drug_source_drug_product" type="reltv"
	 src-table="public.dpd_drug_source"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

<table name="dpd_drug_form">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="420" y="820"/>

	<customidxs object-type="column">
		<object name="dpd_drug_code" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_drug_fk" index="1"/>
		<object name="dpd_drug_form_pk" index="0"/>
	</customidxs>
</table>

<relationship name="dpd_drug_has_many_dpd_drug_form" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug"
	 dst-table="public.dpd_drug_form"
	 src-required="true" dst-required="false">
	<label ref-type="dst-label">
		<position x="0" y="0"/>
	</label>
	<special-pk-cols indexes="0"/>
</relationship>

<relationship name="dpd_drug_has_many_dpd_drug_route" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug"
	 dst-table="public.dpd_drug_route"
	 src-required="true" dst-required="false">
	<special-pk-cols indexes="0"/>
</relationship>

<relationship name="dpd_form_has_many_dpd_drug_form" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_form"
	 dst-table="public.dpd_drug_form"
	 src-required="true" dst-required="false">
	<special-pk-cols indexes="0"/>
</relationship>

<relationship name="dpd_route_has_many_dpd_drug_route" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_route"
	 dst-table="public.dpd_drug_route"
	 src-required="true" dst-required="false">
	<label ref-type="src-label">
		<position x="0" y="0"/>
	</label>
	<special-pk-cols indexes="0"/>
</relationship>

<table name="schedule" sql-disabled="true">
	<schema name="dpd"/>
	<role name="postgres"/>
	<position x="600" y="1280"/>
	<column name="drug_code" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="extract" default-value="'approved'">
		<type name="text" length="0"/>
	</column>
	<column name="schedule">
		<type name="varchar" length="0"/>
	</column>
	<column name="schedule_f">
		<type name="varchar" length="0"/>
	</column>
</table>

<table name="ntp_dosage_forms">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="1840" y="800"/>
	<column name="ntp_dosage_form_code">
		<type name="bigint" length="0"/>
	</column>
	<column name="ntp_dosage_form">
		<type name="text" length="0"/>
	</column>
	<column name="route_of_administration_code">
		<type name="text" length="0"/>
	</column>
	<column name="route_of_administration">
		<type name="text" length="0"/>
	</column>
	<column name="route_of_administration_f">
		<type name="text" length="0"/>
	</column>
	<column name="pharm_form_code">
		<type name="text" length="0"/>
	</column>
	<column name="pharmaceutical_form">
		<type name="text" length="0"/>
	</column>
	<column name="pharmaceutical_form_f">
		<type name="text" length="0"/>
	</column>
	<column name="audit_id">
		<type name="bigint" length="0"/>
	</column>
</table>

<view name="dpd_drug_form_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="760" y="1920"/>
	<reference table="dpd.pharmaceutical_form" column="drug_code" alias="pf" column-alias="dpd_drug_code"/>
	<reference table="dpd.pharmaceutical_form" column="pharm_form_code" alias="pf" column-alias="dpd_form_code"/>
	<reference table="dpd.pharmaceutical_form" alias="pf"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = pf.drug_code)]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3</expression>
</view>

<relationship name="rel_dpd_drug_form_source_pharmaceutical_form" type="reltv"
	 src-table="public.dpd_drug_form_source"
	 dst-table="dpd.pharmaceutical_form"
	 src-required="false" dst-required="false"/>

<view name="dpd_drug_route_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="520" y="1920"/>
	<reference table="dpd.route" column="drug_code" alias="r" column-alias="dpd_drug_code"/>
	<reference alias="dpd_route_code">
		<expression><![CDATA[CAST(r.route_of_administration_code as bigint)]]></expression>
	</reference>
	<reference table="dpd.route" alias="r"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = r.drug_code)]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3</expression>
</view>

<relationship name="rel_dpd_route_source_cp_route" type="reltv"
	 src-table="public.dpd_drug_route_source"
	 dst-table="dpd.route"
	 src-required="false" dst-required="false"/>

<view name="dpd_active_ingredient_code_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="780" y="1060"/>
	<reference table="dpd.active_ingredient" column="active_ingredient_code" alias="ai" column-alias="id"/>
	<reference table="dpd.active_ingredient" alias="ai"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = ai.drug_code)]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY id]]></expression>
	</reference>
	<expression type="select-exp">0</expression>
	<expression type="from-exp">1</expression>
	<expression type="simple-exp">2,3</expression>
</view>

<relationship name="rel_dpd_active_ingredient_code_source_active_ingredient" type="reltv"
	 src-table="public.dpd_active_ingredient_code_source"
	 dst-table="dpd.active_ingredient"
	 src-required="false" dst-required="false"/>

<sequence name="dpd_drug_ingredient_option_source_order"
	 start="1" increment="1"
	 min-value="0" max-value="2147483647"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<view name="dpd_named_ingredient_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="580" y="1060"/>
	<reference table="dpd.active_ingredient" column="ingredient" alias="ai" column-alias="name"/>
	<reference table="dpd.active_ingredient" alias="ai"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = ai.drug_code)]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY name]]></expression>
	</reference>
	<expression type="select-exp">0</expression>
	<expression type="from-exp">1</expression>
	<expression type="simple-exp">2,3</expression>
</view>

<relationship name="rel_dpd_active_ingredient_code_source_cp_active_ingredient" type="reltv"
	 src-table="public.dpd_named_ingredient_source"
	 dst-table="dpd.active_ingredient"
	 src-required="false" dst-required="false"/>

<table name="dpd_drug_ingredient_option">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1120" y="220"/>
	<column name="strength_amount" not-null="true">
		<type name="double precision" length="0"/>
	</column>
	<column name="strength_unit" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<column name="dosage_amount">
		<type name="double precision" length="0"/>
	</column>
	<column name="dosage_unit">
		<type name="varchar" length="0"/>
	</column>
	<column name="source_order" sequence="public.dpd_drug_ingredient_option_source_order">
		<type name="bigint" length="0"/>
	</column>

	<customidxs object-type="column">
		<object name="dpd_active_ingredient_code_id" index="2"/>
		<object name="dpd_drug_code" index="0"/>
		<object name="dpd_named_ingredient_name" index="1"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_drug_ingredient_fk" index="0"/>
	</customidxs>
</table>

<relationship name="dpd_drug_ingredient_has_many_dpd_drug_ingredient_strength" type="rel1n"
	 src-col-pattern="{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug_ingredient"
	 dst-table="public.dpd_drug_ingredient_option"
	 src-required="true" dst-required="false"/>

<function name="ccdd_normalized_unit"
		window-func="false"
		returns-setof="false"
		behavior-type="RETURNS NULL ON NULL INPUT"
		function-type="STABLE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="sql" sql-disabled="true"/>
	<return-type>
	<type name="varchar" length="0"/>
	</return-type>
	<parameter name="dpd_unit">
		<type name="varchar" length="0"/>
	</parameter>
	<definition><![CDATA[SELECT regexp_replace(
	regexp_replace(
		lower(dpd_unit),
		'^ml$', -- whole string must match
		'mL'
	),
	'^act$', -- whole string must match
	'actuation'
);]]></definition>
</function>

<view name="dpd_drug_ingredient_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1040" y="1080"/>
	<reference table="dpd.active_ingredient" column="drug_code" alias="ai" column-alias="dpd_drug_code"/>
	<reference table="dpd.active_ingredient" column="ingredient" alias="ai" column-alias="dpd_named_ingredient_name"/>
	<reference table="dpd.active_ingredient" column="active_ingredient_code" alias="ai" column-alias="dpd_active_ingredient_code_id"/>
	<reference table="dpd.active_ingredient" alias="ai"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = ai.drug_code)]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY dpd_drug_code, dpd_named_ingredient_name, dpd_active_ingredient_code_id]]></expression>
	</reference>
	<expression type="select-exp">0,1,2</expression>
	<expression type="from-exp">3</expression>
	<expression type="simple-exp">4,5</expression>
</view>

<relationship name="rel_dpd_drug_ingredient_source_active_ingredient" type="reltv"
	 src-table="public.dpd_drug_ingredient_source"
	 dst-table="dpd.active_ingredient"
	 src-required="false" dst-required="false"/>

<view name="dpd_drug_ingredient_option_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1400" y="1100"/>
	<reference table="dpd.active_ingredient" column="drug_code" alias="ai" column-alias="dpd_drug_code"/>
	<reference table="dpd.active_ingredient" column="ingredient" alias="ai" column-alias="dpd_named_ingredient_name"/>
	<reference table="dpd.active_ingredient" column="active_ingredient_code" alias="ai" column-alias="dpd_active_ingredient_code_id"/>
	<reference alias="strength_amount">
		<expression><![CDATA[CAST (ai.strength AS double precision)]]></expression>
	</reference>
	<reference alias="strength_unit">
		<expression><![CDATA[ccdd_normalized_unit(ai.strength_unit)]]></expression>
	</reference>
	<reference alias="dosage_amount">
		<expression><![CDATA[CAST (nullif(ai.dosage_value, '') AS double precision)]]></expression>
	</reference>
	<reference alias="dosage_unit">
		<expression><![CDATA[ccdd_normalized_unit(ai.dosage_unit)]]></expression>
	</reference>
	<reference table="dpd.active_ingredient" alias="ai"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = ai.drug_code)]]></expression>
	</reference>
	<expression type="select-exp">0,1,2,3,4,5,6</expression>
	<expression type="from-exp">7</expression>
	<expression type="simple-exp">8</expression>
</view>

<relationship name="rel_dpd_drug_ingredient_option_source_active_ingredient" type="reltv"
	 src-table="public.dpd_drug_ingredient_option_source"
	 dst-table="dpd.active_ingredient"
	 src-required="false" dst-required="false"/>

<view name="dpd_route_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="580" y="1000"/>
	<reference>
		<expression><![CDATA[SELECT code, max(name_en) as name_en FROM (
	SELECT
	   CAST(r.route_of_administration_code as bigint) AS code,
	   r.route_of_administration AS name_en
	FROM
	   dpd.route AS r
	WHERE
	   EXISTS(select * from public.dpd_drug_source ds where ds.code = r.drug_code)

	UNION

	SELECT
	   CAST(route_code_part as bigint) AS code,
		null as name_en
	FROM
	   ccdd.ntp_dosage_forms AS df,
	   regexp_split_to_table(df.route_of_administration_code, '\s*\D\s*', 'i') AS route_code_part
) allcodes
GROUP BY code
]]></expression>
	</reference>
</view>

<table name="ingredient_stem_csv">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2080" y="620"/>
	<column name="ccdd">
		<type name="varchar" length="0"/>
	</column>
	<column name="top250name">
		<type name="varchar" length="0"/>
	</column>
	<column name="dpd_ingredient">
		<type name="varchar" length="0"/>
	</column>
	<column name="ing_stem">
		<type name="varchar" length="0"/>
	</column>
	<column name="hydrate">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_ing">
		<type name="varchar" length="0"/>
	</column>
</table>

<table name="tm_definition">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="1840" y="580"/>
	<column name="code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="formal_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="tm_definition_pk" type="pk-constr" table="ccdd.tm_definition">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
</table>

<view name="ccdd_ntp_ingredient_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1800" y="440"/>
	<reference table="ccdd.ingredient_stem_csv" column="ntp_ing" alias="isc" column-alias="name"/>
	<reference table="ccdd.ingredient_stem_csv" column="ing_stem" alias="isc" column-alias="ccdd_ingredient_stem_name"/>
	<reference table="ccdd.ingredient_stem_csv" alias="isc"/>
	<reference>
		<expression><![CDATA[exists(select * from dpd_named_ingredient_source dni where dni.name = isc.dpd_ingredient)]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY name, ccdd_ingredient_stem_name]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3,4</expression>
</view>

<relationship name="rel_ccdd_ntp_ingredient_source_ingredient_stem_csv" type="reltv"
	 src-table="public.ccdd_ntp_ingredient_source"
	 dst-table="ccdd.ingredient_stem_csv"
	 src-required="false" dst-required="false"/>

<table name="ccdd_tm_ingredient_stem">
	<schema name="public"/>
	<position x="1480" y="600"/>

	<customidxs object-type="column">
		<object name="ccdd_tm_code" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_tm_fk" index="1"/>
		<object name="ccdd_tm_ingredient_stem_pk" index="0"/>
	</customidxs>
</table>

<relationship name="ccdd_tm_has_many_tm_ccdd_ingredient_stem" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.ccdd_tm"
	 dst-table="public.ccdd_tm_ingredient_stem"
	 src-required="true" dst-required="false"
	 identifier="true"
/>

<relationship name="ccdd_ingredient_stem_has_many_tm_ccdd_ingredient_stem" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.ccdd_ingredient_stem"
	 dst-table="public.ccdd_tm_ingredient_stem"
	 src-required="true" dst-required="false"
	 identifier="true"
/>

<view name="ccdd_dpd_ingredient_ntp_mapping_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1800" y="360"/>
	<reference table="ccdd.ingredient_stem_csv" column="dpd_ingredient" alias="isc" column-alias="dpd_named_ingredient_name"/>
	<reference table="ccdd.ingredient_stem_csv" column="ntp_ing" alias="isc" column-alias="ccdd_ntp_ingredient_name"/>
	<reference alias="ccdd">
		<expression><![CDATA[coalesce(isc.ccdd = 'Y', false)]]></expression>
	</reference>
	<reference table="ccdd.ingredient_stem_csv" alias="isc"/>
	<reference>
		<expression><![CDATA[exists(select * from dpd_named_ingredient_source dni where dni.name = isc.dpd_ingredient)]]></expression>
	</reference>
	<expression type="select-exp">0,1,2</expression>
	<expression type="from-exp">3</expression>
	<expression type="simple-exp">4</expression>
</view>

<relationship name="rel_ccdd_dpd_ingredient_ntp_mapping_source_ingredient_stem_csv" type="reltv"
	 src-table="public.ccdd_dpd_ingredient_ntp_mapping_source"
	 dst-table="ccdd.ingredient_stem_csv"
	 src-required="false" dst-required="false"/>

<view name="ccdd_ingredient_stem_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1800" y="500"/>
	<reference>
		<expression><![CDATA[SELECT name FROM (
	SELECT
		isc.ing_stem AS name
	FROM
		ccdd.ingredient_stem_csv AS isc
	WHERE
		exists(select * from dpd_named_ingredient_source dni where dni.name = isc.dpd_ingredient)

	UNION

	SELECT
		tm_name_part AS name
	FROM
		ccdd.tm_definition AS tt,
		regexp_split_to_table(tt.formal_name, '\s+and\s+', 'i') AS tm_name_part
) allstems
GROUP BY name
]]></expression>
	</reference>
</view>

<view name="ccdd_tm_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1920" y="1020"/>
	<reference table="ccdd.tm_definition" column="code" alias="tt" column-alias="code"/>
	<reference table="ccdd.tm_definition" alias="tt"/>
	<reference>
		<expression><![CDATA[tt.code IS NOT NULL]]></expression>
	</reference>
	<expression type="select-exp">0</expression>
	<expression type="from-exp">1</expression>
	<expression type="simple-exp">2</expression>
</view>

<relationship name="rel_ccdd_tm_source_tm_definition" type="reltv"
	 src-table="public.ccdd_tm_source"
	 dst-table="ccdd.tm_definition"
	 src-required="false" dst-required="false"/>

<view name="ccdd_tm_ingredient_stem_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1920" y="1080"/>
	<reference table="ccdd.tm_definition" column="code" alias="tt" column-alias="ccdd_tm_code"/>
	<reference alias="ccdd_ingredient_stem_name">
		<expression><![CDATA[tm_name_part]]></expression>
	</reference>
	<reference table="ccdd.tm_definition" alias="tt"/>
	<reference>
		<expression><![CDATA[regexp_split_to_table(tt.formal_name, '\s+and\s+', 'i') AS tm_name_part]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2,3</expression>
</view>

<relationship name="rel_ccdd_tm_ingredient_stem_source_tm_definition" type="reltv"
	 src-table="public.ccdd_tm_ingredient_stem_source"
	 dst-table="ccdd.tm_definition"
	 src-required="false" dst-required="false"/>

<table name="ccdd_dosage_form_mapping_dpd_form">
	<schema name="public"/>
	<position x="820" y="700"/>

	<customidxs object-type="column">
		<object name="ccdd_dosage_form_mapping_id" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_dosage_form_mapping_dpd_form_pk" index="0"/>
		<object name="ccdd_dosage_form_mapping_fk" index="1"/>
	</customidxs>
</table>

<relationship name="ccdd_dosage_form_mapping_has_many_ccdd_dfm_form" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 src-table="public.ccdd_dosage_form_mapping"
	 dst-table="public.ccdd_dosage_form_mapping_dpd_form"
	 src-required="true" dst-required="false"
	 identifier="true"
>
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<relationship name="dpd_form_has_many_ccdd_dosage_form_mapping_dpd_form" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 src-table="public.dpd_form"
	 dst-table="public.ccdd_dosage_form_mapping_dpd_form"
	 src-required="true" dst-required="false"
	 identifier="true"
>
	<label ref-type="dst-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<table name="ccdd_dosage_form_mapping_dpd_route">
	<schema name="public"/>
	<position x="1140" y="580"/>

	<customidxs object-type="column">
		<object name="ccdd_dosage_form_mapping_id" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="ccdd_dosage_form_mapping_dpd_route_pk" index="0"/>
		<object name="ccdd_dosage_form_mapping_fk" index="1"/>
	</customidxs>
</table>

<relationship name="ccdd_dosage_form_mapping_has_many_ccdd_dfm_route" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 src-table="public.ccdd_dosage_form_mapping"
	 dst-table="public.ccdd_dosage_form_mapping_dpd_route"
	 src-required="true" dst-required="false"
	 identifier="true"
/>

<relationship name="dpd_route_has_many_ccdd_dosage_form_mapping_dpd_route" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 src-table="public.dpd_route"
	 dst-table="public.ccdd_dosage_form_mapping_dpd_route"
	 src-required="true" dst-required="false"
	 identifier="true"
/>

<view name="dpd_form_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="580" y="960"/>
	<reference>
		<expression><![CDATA[SELECT code, max(name_en) as name_en FROM (
	SELECT
	   pf.pharm_form_code AS code,
	   pf.pharmaceutical_form AS name_en
	FROM
	   dpd.pharmaceutical_form AS pf
	WHERE
	   EXISTS(select * from public.dpd_drug_source ds where ds.code = pf.drug_code)

	UNION

	SELECT
	   CAST(form_code_part as bigint) AS code,
		null as name_en
	FROM
	   ccdd.ntp_dosage_forms AS df,
	   regexp_split_to_table(df.pharm_form_code, '\s*\D\s*', 'i') AS form_code_part
) allcodes
GROUP BY code
]]></expression>
	</reference>
</view>

<view name="ccdd_dosage_form_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2040" y="1160"/>
	<reference table="ccdd.ntp_dosage_forms" column="ntp_dosage_form" alias="df" column-alias="name"/>
	<reference table="ccdd.ntp_dosage_forms" column="ntp_dosage_form_code" alias="df" column-alias="code"/>
	<reference table="ccdd.ntp_dosage_forms" alias="df"/>
	<reference>
		<expression><![CDATA[true]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY name, code]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3,4</expression>
</view>

<relationship name="rel_ccdd_dosage_form_source_ntp_dosage_forms" type="reltv"
	 src-table="public.ccdd_dosage_form_source"
	 dst-table="ccdd.ntp_dosage_forms"
	 src-required="false" dst-required="false"/>

<view name="ccdd_dosage_form_mapping_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Grouped to eliminate possible duplicates]]></comment>
	<position x="2040" y="1220"/>
	<reference alias="id">
		<expression><![CDATA[CONCAT(df.ntp_dosage_form_code, '|', df.route_of_administration_code, '|', df.pharm_form_code)]]></expression>
	</reference>
	<reference table="ccdd.ntp_dosage_forms" column="ntp_dosage_form" alias="df" column-alias="ccdd_dosage_form_name"/>
	<reference table="ccdd.ntp_dosage_forms" alias="df"/>
	<reference>
		<expression><![CDATA[true]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY id, ccdd_dosage_form_name]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3,4</expression>
</view>

<relationship name="rel_ccdd_dosage_form_mapping_source_ntp_dosage_forms" type="reltv"
	 src-table="public.ccdd_dosage_form_mapping_source"
	 dst-table="ccdd.ntp_dosage_forms"
	 src-required="false" dst-required="false"/>

<view name="ccdd_dosage_form_mapping_dpd_form_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2040" y="1280"/>
	<reference alias="ccdd_dosage_form_mapping_id">
		<expression><![CDATA[CONCAT(df.ntp_dosage_form_code, '|', df.route_of_administration_code, '|', df.pharm_form_code)]]></expression>
	</reference>
	<reference alias="dpd_form_code">
		<expression><![CDATA[CAST(form_code_part as bigint)]]></expression>
	</reference>
	<reference table="ccdd.ntp_dosage_forms" alias="df"/>
	<reference>
		<expression><![CDATA[regexp_split_to_table(df.pharm_form_code, '\s*\D\s*', 'i') AS form_code_part]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[true]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY ccdd_dosage_form_mapping_id, dpd_form_code]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2,3</expression>
	<expression type="simple-exp">4,5</expression>
</view>

<view name="ccdd_dosage_form_mapping_dpd_route_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2040" y="1340"/>
	<reference alias="ccdd_dosage_form_mapping_id">
		<expression><![CDATA[CONCAT(df.ntp_dosage_form_code, '|', df.route_of_administration_code, '|', df.pharm_form_code)]]></expression>
	</reference>
	<reference alias="dpd_route_code">
		<expression><![CDATA[CAST(route_code_part as bigint)]]></expression>
	</reference>
	<reference table="ccdd.ntp_dosage_forms" alias="df"/>
	<reference>
		<expression><![CDATA[regexp_split_to_table(df.route_of_administration_code, '\s*\D\s*', 'i') AS route_code_part]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[true]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY ccdd_dosage_form_mapping_id, dpd_route_code]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2,3</expression>
	<expression type="simple-exp">4,5</expression>
</view>

<view name="ccdd_drug_dosage_form_by_route" materialized="true" hide-ext-attribs="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1460" y="1480"/>
	<reference>
		<expression><![CDATA[select dd.code as dpd_drug_code, dform.id as mapping_id, dform.ccdd_dosage_form_name from
	dpd_drug dd,
	ccdd_dosage_form_mapping dform
where
	exists(
		select * from
			dpd_drug_route ddr
			INNER JOIN ccdd_dosage_form_mapping_dpd_route dformRoute ON (dformRoute.dpd_route_code = ddr.dpd_route_code)
		where ddr.dpd_drug_code = dd.code AND dformRoute.ccdd_dosage_form_mapping_id = dform.id
	)
	AND
	not exists(
		select * from
			ccdd_dosage_form_mapping_dpd_route dformRouteOther
		where dformRouteOther.ccdd_dosage_form_mapping_id = dform.id AND not exists(
			select * from
				dpd_drug_route ddr
			where ddr.dpd_drug_code = dd.code AND dformRouteOther.dpd_route_code = ddr.dpd_route_code
		)
	)
	AND
	not exists(
		select * from
			dpd_drug_route ddrOther
		where ddrOther.dpd_drug_code = dd.code AND not exists(
			select * from
				ccdd_dosage_form_mapping_dpd_route dformRoute
			where dformRoute.ccdd_dosage_form_mapping_id = dform.id AND dformRoute.dpd_route_code = ddrOther.dpd_route_code
		)
	)
]]></expression>
	</reference>
</view>

<table name="combination_products_csv">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2100" y="880"/>
	<column name="drug_code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="drug_identification_number">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_formal_name">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_type">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="combination_products_csv_pk" type="pk-constr" table="ccdd.combination_products_csv">
		<columns names="drug_code" ref-type="src-columns"/>
	</constraint>
</table>

<function name="ccdd_normalize_ingredient"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="sql" sql-disabled="true"/>
	<return-type>
	<type name="varchar" length="0"/>
	</return-type>
	<parameter name="raw_ingredient">
		<type name="varchar" length="0"/>
	</parameter>
	<definition><![CDATA[WITH src AS (SELECT raw_ingredient as ingredient)
SELECT
	string_agg(CASE
		WHEN vitamatch is not null THEN concat(vitamatch[1], upper(vitamatch[2]), vitamatch[3])
		ELSE lower(src.ingredient)
	END, '') as name
FROM
	src
	left join lateral regexp_matches(lower(src.ingredient), '(vitamin )([a-z])((?:(?!vitamin [a-z]).)*)', 'g') as vitamatch on(true)]]></definition>
</function>

<view name="ccdd_drug_ingredient_option_description">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1460" y="1240"/>
	<reference>
		<expression><![CDATA[SELECT
	ddio.dpd_drug_code,
	p.id as ccdd_presentation_id,
	ccdd_normalize_ingredient(ddio.dpd_named_ingredient_name) as drug_ingredient_name,
	ntpmap.ccdd_ntp_ingredient_name as ntp_ingredient_name,
	ntpi.ccdd_ingredient_stem_name as ingredient_stem_name,
	CASE
		WHEN p.unit is not null AND p.strength_is_per_size_unit THEN format('%s %s per %s %s', strength_amount * p.size_amount, strength_unit, p.size_amount, p.size_unit)
		WHEN (
			upper(ddio.dosage_unit) not in ('', '%', 'BLISTER', 'CAP', 'DOSE', 'ECC', 'ECT', 'KIT', 'LOZ', 'NIL', 'PATCH', 'SLT', 'SRC', 'SRD', 'SRT', 'SUP', 'SYR', 'TAB', 'V/V', 'W/V', 'W/W')
		) THEN (
			CASE
				WHEN dosage_amount is not null THEN format('%s %s per %s %s', strength_amount, strength_unit, dosage_amount, dosage_unit)
				ELSE format('%s %s per %s', strength_amount, strength_unit, dosage_unit)
			END
		)
		ELSE format('%s %s', strength_amount, strength_unit)
	END AS strength_description,
	ddio.source_order,
	COALESCE(ntpmap.ccdd, false) as ccdd
FROM
	public.dpd_drug_ingredient_option AS ddio
	LEFT JOIN public.ccdd_dpd_ingredient_ntp_mapping ntpmap ON (ntpmap.dpd_named_ingredient_name = ddio.dpd_named_ingredient_name)
	LEFT JOIN ccdd_ntp_ingredient ntpi on(ntpi.name = ntpmap.ccdd_ntp_ingredient_name)
	LEFT JOIN public.ccdd_presentation p on(p.dpd_drug_code = ddio.dpd_drug_code)
]]></expression>
	</reference>
</view>

<table name="unit_of_presentation_csv">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2320" y="660"/>
	<column name="drug_code">
		<type name="bigint" length="0"/>
	</column>
	<column name="unit_of_presentation">
		<type name="varchar" length="0"/>
	</column>
	<column name="uop_size">
		<type name="varchar" length="0"/>
	</column>
	<column name="uop_unit_of_measure">
		<type name="varchar" length="0"/>
	</column>
	<column name="calculation">
		<type name="varchar" length="0"/>
	</column>
	<column name="uop_size_insert">
		<type name="varchar" length="0"/>
	</column>
</table>

<view name="ccdd_drug_dosage_form_by_form" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1460" y="1400"/>
	<reference>
		<expression><![CDATA[select dd.code as dpd_drug_code, dform.id as mapping_id, dform.ccdd_dosage_form_name from
	dpd_drug dd,
	ccdd_dosage_form_mapping dform
where
	exists(
		select * from
			dpd_drug_form ddf
			INNER JOIN ccdd_dosage_form_mapping_dpd_form dformForm ON (dformForm.dpd_form_code = ddf.dpd_form_code)
		where ddf.dpd_drug_code = dd.code AND dformForm.ccdd_dosage_form_mapping_id = dform.id
	)
	AND
	not exists(
		select * from
			ccdd_dosage_form_mapping_dpd_form dformFormOther
		where dformFormOther.ccdd_dosage_form_mapping_id = dform.id AND not exists(
			select * from
				dpd_drug_form ddf
			where ddf.dpd_drug_code = dd.code AND dformFormOther.dpd_form_code = ddf.dpd_form_code
		)
	)
	AND
	not exists(
		select * from
			dpd_drug_form ddfOther
		where ddfOther.dpd_drug_code = dd.code AND not exists(
			select * from
				ccdd_dosage_form_mapping_dpd_form dformForm
			where dformForm.ccdd_dosage_form_mapping_id = dform.id AND dformForm.dpd_form_code = ddfOther.dpd_form_code
		)
	)
]]></expression>
	</reference>
</view>

<view name="ccdd_drug_dosage_form" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1460" y="1560"/>
	<reference>
		<expression><![CDATA[select
	dd.code as dpd_drug_code,
	(
		select dfbf.ccdd_dosage_form_name from
			ccdd_drug_dosage_form_by_form dfbf
			INNER JOIN ccdd_drug_dosage_form_by_route dfbr USING(dpd_drug_code, mapping_id)
		where dfbf.dpd_drug_code = dd.code
	) as dosage_form
from
	dpd_drug dd]]></expression>
	</reference>
</view>

<view name="ccdd_drug_ingredient_summary" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1460" y="1300"/>
	<reference>
		<expression><![CDATA[SELECT
	dd.code AS dpd_drug_code,
	p.id AS ccdd_presentation_id,
	(CASE
		WHEN p.unit_has_explicit_size THEN format('%s %s %s', p.size_amount, p.size_unit, p.unit)
		ELSE p.unit
	END) AS uop_suffix,
	STRING_AGG(
		format('%s %s', dod.drug_ingredient_name, dod.strength_description),
		' and '
		ORDER BY
			regexp_replace(dod.ingredient_stem_name, '[[:punct:]]', '', 'g'),
			regexp_replace(dod.drug_ingredient_name, '[[:punct:]]', '', 'g'),
			dod.source_order
	) AS drug_ingredient_detail_set,
	STRING_AGG(
		(CASE WHEN dod.ntp_ingredient_name is not null then format('%s %s', dod.ntp_ingredient_name, dod.strength_description) else '<UNKNOWN>' END),
		' and '
		ORDER BY
			regexp_replace(dod.ingredient_stem_name, '[[:punct:]]', '', 'g'),
			regexp_replace(dod.ntp_ingredient_name, '[[:punct:]]', '', 'g'),
			dod.source_order
	) AS ntp_ingredient_detail_set,
	bool_and(dod.ccdd) AS ccdd_all
FROM
	dpd_drug dd
	LEFT JOIN ccdd_presentation p ON(p.dpd_drug_code = dd.code)
	LEFT JOIN ccdd_drug_ingredient_option_description dod ON(dod.dpd_drug_code = dd.code AND dod.ccdd_presentation_id IS NOT DISTINCT FROM p.id)
GROUP BY
	dd.code,
	p.id
]]></expression>
	</reference>
</view>

<index name="ccdd_presentation_dpd_drug_code" table="public.ccdd_presentation"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_drug_code"/>
		</idxelement>
</index>

<index name="dpd_drug_ingredient_dpd_drug_code" table="public.dpd_drug_ingredient"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_drug_code"/>
		</idxelement>
</index>

<index name="ccdd_dpd_ingredient_ntp_mapping_dpd_named_ingredient_name" table="public.ccdd_dpd_ingredient_ntp_mapping"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_named_ingredient_name"/>
		</idxelement>
</index>

<index name="ccdd_ntp_ingredient_stem_name" table="public.ccdd_ntp_ingredient"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="ccdd_ingredient_stem_name"/>
		</idxelement>
</index>

<index name="dpd_drug_form_drug" table="public.dpd_drug_form"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_drug_code"/>
		</idxelement>
</index>

<index name="dpd_drug_form_form" table="public.dpd_drug_form"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_form_code"/>
		</idxelement>
</index>

<index name="dpd_drug_route_drug" table="public.dpd_drug_route"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_drug_code"/>
		</idxelement>
</index>

<index name="dpd_drug_route_route" table="public.dpd_drug_route"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_route_code"/>
		</idxelement>
</index>

<index name="ccdd_dosage_form_mapping_dpd_form_id" table="public.ccdd_dosage_form_mapping_dpd_form"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="ccdd_dosage_form_mapping_id"/>
		</idxelement>
</index>

<index name="ccdd_dosage_form_mapping_dpd_form_form" table="public.ccdd_dosage_form_mapping_dpd_form"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_form_code"/>
		</idxelement>
</index>

<index name="ccdd_dosage_form_mapping_dpd_route_id" table="public.ccdd_dosage_form_mapping_dpd_route"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="ccdd_dosage_form_mapping_id"/>
		</idxelement>
</index>

<index name="ccdd_dosage_form_mapping_dpd_route_route" table="public.ccdd_dosage_form_mapping_dpd_route"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_route_code"/>
		</idxelement>
</index>

<index name="ccdd_drug_dosage_form_by_form_drug_code" table="public.ccdd_drug_dosage_form_by_form"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<index name="ccdd_drug_dosage_form_by_route_drug_code" table="public.ccdd_drug_dosage_form_by_route"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<index name="ccdd_drug_dosage_form_drug_code" table="public.ccdd_drug_dosage_form"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<index name="ccdd_drug_ingredient_summary_drug_code" table="public.ccdd_drug_ingredient_summary"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<view name="ccdd_combination_product_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2220" y="1040"/>
	<reference table="ccdd.combination_products_csv" column="drug_code" alias="cp" column-alias="dpd_drug_code"/>
	<reference table="ccdd.combination_products_csv" column="mp_formal_name" alias="cp"/>
	<reference table="ccdd.combination_products_csv" column="ntp_formal_name" alias="cp"/>
	<reference table="ccdd.combination_products_csv" column="ntp_type" alias="cp"/>
	<reference table="ccdd.combination_products_csv" alias="cp"/>
	<reference>
		<expression><![CDATA[exists(select * from dpd_drug_source dd where dd.code = cp.drug_code)]]></expression>
	</reference>
	<expression type="select-exp">0,1,2,3</expression>
	<expression type="from-exp">4</expression>
	<expression type="simple-exp">5</expression>
</view>

<relationship name="rel_ccdd_combination_product_source_combination_products_csv" type="reltv"
	 src-table="public.ccdd_combination_product_source"
	 dst-table="ccdd.combination_products_csv"
	 src-required="false" dst-required="false"/>

<table name="mp_brand_override">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2520" y="800"/>
	<column name="drug_code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="brand">
		<type name="text" length="0"/>
	</column>
	<constraint name="mp_brand_override_pk" type="pk-constr" table="ccdd.mp_brand_override">
		<columns names="drug_code" ref-type="src-columns"/>
	</constraint>
</table>

<view name="ccdd_drug_tm" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1800" y="1200"/>
	<reference>
		<expression><![CDATA[SELECT
	dd.code AS dpd_drug_code,
	tm.code AS tm_code,
	(
		SELECT
			STRING_AGG(stemList.stem, ' and ')
		FROM (
			SELECT
				tmistem.ccdd_ingredient_stem_name AS stem
			FROM ccdd_tm_ingredient_stem tmistem
			WHERE tmistem.ccdd_tm_code = tm.code
			GROUP BY tmistem.ccdd_ingredient_stem_name
			ORDER BY regexp_replace(tmistem.ccdd_ingredient_stem_name, '[[:punct:]]', '', 'g')
		) AS stemList
	) AS tm_formal_name
FROM
	dpd_drug dd,
	ccdd_tm tm
WHERE
	EXISTS(
		SELECT * FROM
			dpd_drug_ingredient ddi
			INNER JOIN ccdd_dpd_ingredient_ntp_mapping dintp ON(dintp.dpd_named_ingredient_name = ddi.dpd_named_ingredient_name)
			INNER JOIN ccdd_ntp_ingredient ntpi ON(ntpi.name = dintp.ccdd_ntp_ingredient_name)
			INNER JOIN ccdd_tm_ingredient_stem tmistem ON(tmistem.ccdd_ingredient_stem_name = ntpi.ccdd_ingredient_stem_name)
		WHERE ddi.dpd_drug_code = dd.code AND tmistem.ccdd_tm_code = tm.code
	)
	AND
	NOT EXISTS(
		SELECT * FROM
			ccdd_tm_ingredient_stem tmistemOther
		WHERE tmistemOther.ccdd_tm_code = tm.code AND NOT EXISTS(
			SELECT * FROM
				dpd_drug_ingredient ddi
				INNER JOIN ccdd_dpd_ingredient_ntp_mapping dintp ON(dintp.dpd_named_ingredient_name = ddi.dpd_named_ingredient_name)
				INNER JOIN ccdd_ntp_ingredient ntpi ON(ntpi.name = dintp.ccdd_ntp_ingredient_name)
			WHERE ddi.dpd_drug_code = dd.code AND ntpi.ccdd_ingredient_stem_name = tmistemOther.ccdd_ingredient_stem_name
		)
	)
	AND
	NOT EXISTS(
		SELECT * FROM
			dpd_drug_ingredient ddiOther
		WHERE ddiOther.dpd_drug_code = dd.code AND NOT EXISTS(
			SELECT * FROM
				ccdd_dpd_ingredient_ntp_mapping dintp
				INNER JOIN ccdd_ntp_ingredient ntpi ON(ntpi.name = dintp.ccdd_ntp_ingredient_name)
				INNER JOIN ccdd_tm_ingredient_stem tmistem ON(tmistem.ccdd_ingredient_stem_name = ntpi.ccdd_ingredient_stem_name)
			WHERE tmistem.ccdd_tm_code = tm.code AND dintp.dpd_named_ingredient_name = ddiOther.dpd_named_ingredient_name
		)
	)
]]></expression>
	</reference>
</view>

<table name="tm_filter">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2540" y="720"/>
	<column name="tm_code">
		<type name="varchar" length="0"/>
	</column>
</table>

<table name="dpd_drug_status">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="280" y="40"/>
	<column name="status_date" not-null="true">
		<type name="date" length="0"/>
	</column>
	<column name="status" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<column name="is_current" not-null="true">
		<type name="bool" length="0"/>
	</column>
	<column name="expiration_date">
		<type name="varchar" length="0"/>
	</column>

	<customidxs object-type="column">
		<object name="dpd_drug_code" index="0"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_drug_fk" index="0"/>
	</customidxs>
</table>

<view name="ccdd_drug_status" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1800" y="1280"/>
	<reference>
		<expression><![CDATA[select
	dd.code as dpd_drug_code,
	(array_agg(ds_fm.status_date order by ds_fm.status_date))[1] as first_market_date,
	(array_agg(ds_c.status order by ds_c.status_date))[1] as current_status,
	(array_agg(ds_c.status_date order by ds_c.status_date))[1] as current_status_date,
	(array_agg(ds_c.expiration_date order by ds_c.status_date))[1] as current_expiration_date
from
	dpd_drug dd
	LEFT JOIN dpd_drug_status ds_fm on(ds_fm.dpd_drug_code = dd.code and ds_fm.status = 'MARKETED')
	LEFT JOIN dpd_drug_status ds_c on(ds_c.dpd_drug_code = dd.code and ds_c.is_current)
group by dd.code]]></expression>
	</reference>
</view>

<view name="dpd_drug_schedule_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="520" y="1140"/>
	<reference table="dpd.schedule" column="drug_code" alias="sch" column-alias="dpd_drug_code"/>
	<reference table="dpd.schedule" column="schedule" alias="sch" column-alias="schedule"/>
	<reference>
		<expression><![CDATA[	dpd.schedule AS sch]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = sch.drug_code)
GROUP BY dpd_drug_code, sch.schedule;]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3</expression>
</view>

<relationship name="rel_dpd_drug_schedule_source_schedule" type="reltv"
	 src-table="public.dpd_drug_schedule_source"
	 dst-table="dpd.schedule"
	 src-required="false" dst-required="false"/>

<table name="dpd_drug_schedule">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="500" y="60"/>
	<column name="schedule">
		<type name="varchar" length="0"/>
	</column>

	<customidxs object-type="column">
		<object name="dpd_drug_code" index="1"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="dpd_drug_fk" index="0"/>
	</customidxs>
</table>

<view name="ccdd_drug_schedule" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="720" y="1140"/>
	<reference>
		<expression><![CDATA[SELECT
	sch.dpd_drug_code AS dpd_drug_code,
	sch.schedule AS schedule,
	schedule_policy_mapping.policy_type AS policy_type
FROM
	(VALUES
		('Narcotic (CDSA I)', 500002),
		('Schedule G (CDSA I)', 500003),
		('Schedule G (CDSA III)', 500004),
		('Schedule G (CDSA IV)', 500005),
		('Targeted (CDSA IV)', 500006),
		('Narcotic (CDSA II)', 500007)
	) AS schedule_policy_mapping (schedule, policy_type)
	INNER JOIN public.dpd_drug_schedule sch ON schedule_policy_mapping.schedule = sch.schedule
GROUP BY dpd_drug_code, sch.schedule, schedule_policy_mapping.policy_type;]]></expression>
	</reference>
</view>

<view name="ccdd_mp_table_candidate">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="1660"/>
	<reference>
		<expression><![CDATA[select
	dd.code as dpd_drug_code,
	p.id as ccdd_presentation_id,
	p.pseudodin,
	dd.din,
	dd.brand_name_en,
	COALESCE(cp.mp_formal_name, format(
		'%s (%s %s) %s',
		COALESCE(mbo.brand, dd.brand_name_en),
		dsum.drug_ingredient_detail_set,
		(CASE
			WHEN p.id is not null THEN format(
				'%s %s',
				COALESCE(ddform.dosage_form, 'NA'),
				dsum.uop_suffix
			)
			ELSE COALESCE(ddform.dosage_form, 'NA')
		END),
		dd.company_name
	)) as mp_formal_name,
	COALESCE(cp.ntp_formal_name, format(
		'%s %s',
		dsum.ntp_ingredient_detail_set,
		(CASE
			WHEN p.id is not null THEN format(
				'%s %s',
				COALESCE(ddform.dosage_form, 'NA'),
				dsum.uop_suffix
			)
			ELSE COALESCE(ddform.dosage_form, 'NA')
		END)
	)) as ntp_formal_name,
	cp.ntp_type,
	(CASE
		WHEN ds.current_status = 'MARKETED' THEN ds.first_market_date
		WHEN ds.current_status = 'CANCELLED POST MARKET' AND ds.current_status_date < (SELECT ccdd_date FROM ccdd_config LIMIT 1) AND ds.current_expiration_date::date > (SELECT dpd_extract_date FROM ccdd_config LIMIT 1) THEN ds.first_market_date
		ELSE ds.current_status_date
	END) as mp_status_effective_date,
	(CASE
		WHEN ds.current_status = 'MARKETED' THEN 'Active'
		WHEN ds.current_status = 'CANCELLED POST MARKET' AND ds.current_expiration_date::date > (SELECT dpd_extract_date FROM ccdd_config LIMIT 1)  THEN 'Active'
		ELSE 'Inactive'
	END) as mp_status,
	ds.first_market_date,
	exists(
		select * from
			ccdd_drug_tm dtm
			inner join ccdd.tm_filter tf on (cast(tf.tm_code as bigint) = dtm.tm_code)
		where dtm.dpd_drug_code = dd.code
	) as tm_is_publishable,
	(select count(*) from ccdd_presentation pc where pc.dpd_drug_code = dd.code) as presentation_count
from
	dpd_drug dd
	LEFT JOIN ccdd_presentation p on(p.dpd_drug_code = dd.code)
	LEFT JOIN ccdd_drug_ingredient_summary dsum on(dsum.dpd_drug_code = dd.code and dsum.ccdd_presentation_id is not distinct from p.id)
	LEFT JOIN ccdd_drug_dosage_form ddform on(ddform.dpd_drug_code = dd.code)
	LEFT JOIN ccdd_drug_status ds on(ds.dpd_drug_code = dd.code)
	LEFT JOIN ccdd_combination_product cp on(cp.dpd_drug_code = dd.code)
	LEFT JOIN ccdd.mp_brand_override mbo on(mbo.drug_code = dd.code)
where
	dsum.ccdd_all
]]></expression>
	</reference>
</view>

<table name="ntp_definition">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="1840" y="680"/>
	<column name="code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="formal_name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="ntp_definition_pk" type="pk-constr" table="ccdd.ntp_definition">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="ntp_definition_name" type="uq-constr" table="ccdd.ntp_definition">
		<columns names="formal_name" ref-type="src-columns"/>
	</constraint>
</table>

<view name="ccdd_ntp_table" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="1800"/>
	<reference>
		<expression><![CDATA[(SELECT
	(
		SELECT
			code
		FROM ccdd.ntp_definition prevntp
		WHERE prevntp.formal_name = candidate.ntp_formal_name
	) AS ntp_code,
	candidate.ntp_formal_name,
	(CASE
		WHEN bool_and(candidate.mp_status = 'Inactive') THEN 'Inactive'
		ELSE 'Active'
	END) AS ntp_status,
	candidate.ntp_type,
	to_char((CASE
		WHEN bool_and(candidate.mp_status = 'Inactive') THEN max(candidate.mp_status_effective_date)
		ELSE min(candidate.first_market_date)
	END), 'YYYYMMDD') AS ntp_status_effective_time,
	bool_or(candidate.tm_is_publishable) AS tm_is_publishable
FROM
	ccdd_mp_table_candidate candidate
GROUP BY
	candidate.ntp_formal_name, candidate.ntp_type
ORDER BY ntp_status_effective_time
) UNION ALL (
SELECT
	CAST(depr.code as bigint) as ntp_code,
	deprntp.formal_name as ntp_formal_name,
	'Deprec' as ntp_status,
	null::varchar as ntp_type,
	to_char((SELECT dpd_extract_date FROM ccdd_config LIMIT 1), 'YYYYMMDD') as ntp_status_effective_time,
	true as tm_is_publishable
FROM
	ccdd.ntp_deprecations depr
	LEFT JOIN ccdd.ntp_definition deprntp ON(CAST(deprntp.code as varchar) = depr.code)
)]]></expression>
	</reference>
</view>

<index name="ccdd_drug_status_code" table="public.ccdd_drug_status"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<view name="ccdd_drug_tm_fallback" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1800" y="1360"/>
	<reference>
		<expression><![CDATA[SELECT
	dd.code AS dpd_drug_code,
	(CASE WHEN stemResult.all_stems_mapped THEN stemResult.name END) AS tm_fallback_formal_name
FROM
	dpd_drug dd
	LEFT JOIN LATERAL (
		SELECT
			STRING_AGG(stemList.stem, ' and ') as name,
			bool_and(stemList.stem IS NOT NULL) as all_stems_mapped
		FROM (
			SELECT
				ntpi.ccdd_ingredient_stem_name AS stem
			FROM
				dpd_drug_ingredient ddi
				LEFT JOIN ccdd_dpd_ingredient_ntp_mapping dintp ON(dintp.dpd_named_ingredient_name = ddi.dpd_named_ingredient_name)
				LEFT JOIN ccdd_ntp_ingredient ntpi ON(ntpi.name = dintp.ccdd_ntp_ingredient_name)
			WHERE ddi.dpd_drug_code = dd.code
			GROUP BY ntpi.ccdd_ingredient_stem_name
			ORDER BY regexp_replace(ntpi.ccdd_ingredient_stem_name, '[[:punct:]]', '', 'g')
		) AS stemList
	) AS stemResult ON(true)
]]></expression>
	</reference>
</view>

<index name="ccdd_drug_tm_fallback_code" table="public.ccdd_drug_tm_fallback"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<view name="ccdd_tm_table" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="1880"/>
	<reference>
		<expression><![CDATA[SELECT
	dtm.tm_code,
	COALESCE(dtm.tm_formal_name, dtmf.tm_fallback_formal_name) as tm_formal_name,
	(CASE
		WHEN bool_and(candidate.mp_status = 'Inactive') THEN 'Inactive'
		ELSE 'Active'
	END) AS tm_status,
	to_char((CASE
		WHEN bool_and(candidate.mp_status = 'Inactive') THEN max(candidate.mp_status_effective_date)
		ELSE min(candidate.first_market_date)
	END), 'YYYYMMDD') AS tm_status_effective_time,
	bool_or(candidate.tm_is_publishable) AS tm_is_publishable
FROM
	ccdd_mp_table_candidate candidate
	LEFT JOIN ccdd_drug_tm dtm ON(candidate.dpd_drug_code = dtm.dpd_drug_code)
	LEFT JOIN ccdd_drug_tm_fallback dtmf ON(candidate.dpd_drug_code = dtmf.dpd_drug_code)
GROUP BY
	dtm.tm_code,
	dtm.tm_formal_name,
	dtmf.tm_fallback_formal_name
ORDER BY tm_status_effective_time
]]></expression>
	</reference>
</view>

<table name="mp_release">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2480" y="560"/>
	<column name="mp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="mp_en_description">
		<type name="text" length="0"/>
	</column>
	<column name="mp_fr_description">
		<type name="text" length="0"/>
	</column>
	<column name="mp_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_type">
		<type name="varchar" length="0"/>
	</column>
	<column name="Health_Canada_identifier">
		<type name="text" length="0"/>
	</column>
	<column name="Health_Canada_product_name">
		<type name="text" length="0"/>
	</column>
</table>

<relationship name="dpd_drug_has_many_dpd_drug_status" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.dpd_drug"
	 dst-table="public.dpd_drug_status"
	 src-required="true" dst-required="false"/>

<view name="ccdd_mp_ntp_tm_relationship" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="1960"/>
	<reference>
		<expression><![CDATA[SELECT
	(CASE
		WHEN candidate.presentation_count > 1 THEN COALESCE(cast(candidate.pseudodin AS varchar), candidate.ccdd_presentation_id)
		ELSE candidate.din
	END) AS mp_code,
	candidate.mp_formal_name,
	(
		SELECT
			code
		FROM ccdd.ntp_definition prevntp
		WHERE prevntp.formal_name = candidate.ntp_formal_name
	) AS ntp_code,
	candidate.ntp_formal_name,
	dtm.tm_code,
	COALESCE(dtm.tm_formal_name, dtmf.tm_fallback_formal_name) as tm_formal_name,
	candidate.tm_is_publishable AS tm_is_publishable
FROM
	ccdd_mp_table_candidate candidate
	LEFT JOIN ccdd_drug_tm dtm ON(candidate.dpd_drug_code = dtm.dpd_drug_code)
	LEFT JOIN ccdd_drug_tm_fallback dtmf ON(candidate.dpd_drug_code = dtmf.dpd_drug_code)
]]></expression>
	</reference>
</view>

<view name="ccdd_mp_table" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="1720"/>
	<reference>
		<expression><![CDATA[SELECT
	(CASE
		WHEN candidate.presentation_count > 1 THEN COALESCE(cast(candidate.pseudodin AS varchar), candidate.ccdd_presentation_id)
		ELSE candidate.din
	END) AS mp_code,
	candidate.mp_formal_name,
	NULL::text AS mp_en_description,
	NULL::text AS mp_fr_description,
	candidate.mp_status,
	to_char(candidate.mp_status_effective_date, 'YYYYMMDD') AS mp_status_effective_time,
	(CASE
		WHEN candidate.presentation_count > 1 THEN 'CCDD'
		ELSE 'DIN'
	END) AS mp_type,
	candidate.din AS "Health_Canada_identifier",
	candidate.brand_name_en AS "Health_Canada_product_name",
	candidate.tm_is_publishable AS tm_is_publishable
FROM
	ccdd_mp_table_candidate candidate
]]></expression>
	</reference>
</view>

<index name="ccdd_drug_tm_drug_code" table="public.ccdd_drug_tm"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[dpd_drug_code]]></expression>
		</idxelement>
</index>

<view name="dpd_drug_status_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="220" y="1920"/>
	<reference table="dpd.status" column="drug_code" alias="s" column-alias="dpd_drug_code"/>
	<reference table="dpd.status" column="status" alias="s"/>
	<reference table="dpd.status" column="history_date" alias="s" column-alias="status_date"/>
	<reference alias="is_current">
		<expression><![CDATA[s.current_status_flag = 'Y']]></expression>
	</reference>
	<reference alias="expiration_date">
		<expression><![CDATA[(CASE
	WHEN expiration_date LIKE '____-__-__' THEN to_date(expiration_date, 'YYYY-MM-DD')
	ELSE to_date(expiration_date, 'DD-MON-YYYY')
END)
]]></expression>
	</reference>
	<reference table="dpd.status" alias="s"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = s.drug_code)]]></expression>
	</reference>
	<expression type="select-exp">0,1,2,3,4</expression>
	<expression type="from-exp">5</expression>
	<expression type="simple-exp">6</expression>
</view>

<relationship name="rel_dpd_drug_status_source_status" type="reltv"
	 src-table="public.dpd_drug_status_source"
	 dst-table="dpd.status"
	 src-required="false" dst-required="false"/>

<table name="pseudodin_map">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2520" y="900"/>
	<column name="pseudodin" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="drug_code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="unit_of_presentation" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<column name="uop_size_amount" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<column name="uop_size_unit" not-null="true">
		<type name="varchar" length="0"/>
	</column>
	<constraint name="pseudodin_map_pk" type="pk-constr" table="ccdd.pseudodin_map">
		<columns names="pseudodin" ref-type="src-columns"/>
	</constraint>
</table>

<view name="ccdd_presentation_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="500"/>
	<reference alias="id">
		<expression><![CDATA[md5(concat(drug_code, unit_of_presentation, uop_size, uop_unit_of_measure))]]></expression>
	</reference>
	<reference table="ccdd.unit_of_presentation_csv" column="drug_code" alias="uop" column-alias="dpd_drug_code"/>
	<reference table="ccdd.unit_of_presentation_csv" column="unit_of_presentation" alias="uop" column-alias="unit"/>
	<reference alias="size_amount">
		<expression><![CDATA[CAST(uop.uop_size as double precision)]]></expression>
	</reference>
	<reference alias="size_unit">
		<expression><![CDATA[ccdd_normalized_unit(uop.uop_unit_of_measure)]]></expression>
	</reference>
	<reference alias="strength_is_per_size_unit">
		<expression><![CDATA[uop.calculation = 'Y']]></expression>
	</reference>
	<reference alias="unit_has_explicit_size">
		<expression><![CDATA[uop.uop_size_insert = 'Y']]></expression>
	</reference>
	<reference alias="pseudodin">
		<expression><![CDATA[(select pseudodin from ccdd.pseudodin_map map where
	map.drug_code = uop.drug_code
	AND
	map.unit_of_presentation = uop.unit_of_presentation
	AND
	map.uop_size_amount = uop.uop_size
	AND
	map.uop_size_unit = uop.uop_unit_of_measure
order by pseudodin limit 1)]]></expression>
	</reference>
	<reference table="ccdd.unit_of_presentation_csv" alias="uop"/>
	<reference>
		<expression><![CDATA[exists(select * from dpd_drug_source dd where dd.code = uop.drug_code)]]></expression>
	</reference>
	<expression type="select-exp">0,1,2,3,4,5,6,7</expression>
	<expression type="from-exp">8</expression>
	<expression type="simple-exp">9</expression>
</view>

<relationship name="rel_ccdd_presentation_source_unit_of_presentation_csv" type="reltv"
	 src-table="public.ccdd_presentation_source"
	 dst-table="ccdd.unit_of_presentation_csv"
	 src-required="false" dst-required="false"/>

<view name="qa_release_changes_mp">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2140" y="1540"/>
	<reference>
		<expression><![CDATA[select
	cur.mp_code,
	cur.mp_formal_name,
	(CASE
		WHEN nxt.mp_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.mp_release cur
	LEFT JOIN ccdd_mp_table nxt ON(nxt.mp_code = cur.mp_code)
	LEFT JOIN LATERAL (VALUES
		('mp_formal_name', cur.mp_formal_name, nxt.mp_formal_name),
		('mp_status', UPPER(cur.mp_status), UPPER(nxt.mp_status)),
		('mp_status_effective_time', cur.mp_status_effective_time, nxt.mp_status_effective_time),
		('mp_type', cur.mp_type, nxt.mp_type),
		('Health_Canada_identifier', cur."Health_Canada_identifier", nxt."Health_Canada_identifier"),
		('Health_Canada_product_name', cur."Health_Canada_product_name", nxt."Health_Canada_product_name")
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.mp_code, cur.mp_formal_name, nxt.mp_code

UNION

select
	nxt.mp_code,
	nxt.mp_formal_name,
	'ADDED' as changes
from
	ccdd_mp_table nxt
WHERE
	not exists(select * from ccdd.mp_release cur where cur.mp_code = nxt.mp_code)
]]></expression>
	</reference>
</view>

<table name="ntp_release">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2820" y="560"/>
	<column name="ntp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_en_description">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_fr_description">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_type">
		<type name="varchar" length="0"/>
	</column>
</table>

<index name="ccdd_mp_table_code" table="public.ccdd_mp_table"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[mp_code]]></expression>
		</idxelement>
</index>

<index name="ccdd_mp_table_name" table="public.ccdd_mp_table"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[mp_formal_name]]></expression>
		</idxelement>
</index>

<index name="ccdd_ntp_table_code" table="public.ccdd_ntp_table"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[ntp_code]]></expression>
		</idxelement>
</index>

<index name="ccdd_ntp_table_name" table="public.ccdd_ntp_table"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[ntp_formal_name]]></expression>
		</idxelement>
</index>

<index name="tm_table_code" table="public.ccdd_tm_table"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[tm_code]]></expression>
		</idxelement>
</index>

<index name="tm_table_name" table="public.ccdd_tm_table"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[tm_formal_name]]></expression>
		</idxelement>
</index>

<index name="ccdd_mp_ntp_tm_relationship_mp" table="public.ccdd_mp_ntp_tm_relationship"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<expression><![CDATA[mp_code]]></expression>
		</idxelement>
</index>

<table name="tm_release">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2820" y="700"/>
	<column name="tm_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="tm_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
</table>

<table name="mp_ntp_tm_relationship_release">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2780" y="800"/>
	<column name="mp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="tm_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_formal_name">
		<type name="text" length="0"/>
	</column>
</table>

<view name="qa_release_changes_ntp">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1620"/>
	<reference>
		<expression><![CDATA[select
	cur.ntp_code,
	cur.ntp_formal_name,
	(CASE
		WHEN nxt.ntp_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.ntp_release cur
	LEFT JOIN ccdd_ntp_table nxt ON(cur.ntp_code = CAST(nxt.ntp_code AS varchar))
	LEFT JOIN LATERAL (VALUES
		('ntp_formal_name', cur.ntp_formal_name, nxt.ntp_formal_name),
		('ntp_status', UPPER(cur.ntp_status), UPPER(nxt.ntp_status)),
		('ntp_status_effective_time', cur.ntp_status_effective_time, nxt.ntp_status_effective_time),
		('ntp_type', cur.ntp_type, COALESCE(nxt.ntp_type, 'NA'))
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.ntp_code, cur.ntp_formal_name, nxt.ntp_code

UNION

select
	CAST(nxt.ntp_code AS varchar) as ntp_code,
	nxt.ntp_formal_name,
	'ADDED' as changes
from
	ccdd_ntp_table nxt
WHERE
	not exists(select * from ccdd.ntp_release cur where cur.ntp_code = CAST(nxt.ntp_code AS varchar))
]]></expression>
	</reference>
</view>

<view name="qa_release_changes_tm">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1680"/>
	<reference>
		<expression><![CDATA[select
	cur.tm_code,
	cur.tm_formal_name,
	(CASE
		WHEN nxt.tm_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.tm_release cur
	LEFT JOIN ccdd_tm_table nxt ON(cur.tm_code = CAST(nxt.tm_code AS varchar))
	LEFT JOIN LATERAL (VALUES
		('tm_formal_name', cur.tm_formal_name, nxt.tm_formal_name),
		('tm_status', UPPER(cur.tm_status), UPPER(nxt.tm_status)),
		('tm_status_effective_time', cur.tm_status_effective_time, nxt.tm_status_effective_time)
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.tm_code, cur.tm_formal_name, nxt.tm_code

UNION

select
	CAST(nxt.tm_code AS varchar) as tm_code,
	nxt.tm_formal_name,
	'ADDED' as changes
from
	ccdd_tm_table nxt
WHERE
	not exists(select * from ccdd.tm_release cur where cur.tm_code = CAST(nxt.tm_code AS varchar))
]]></expression>
	</reference>
</view>

<view name="qa_mp_duplicates_code">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1720"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_mp_table nxt
where
	(select count(*) from ccdd_mp_table ct where ct.mp_code = nxt.mp_code) > 1
order by
	nxt.mp_code
]]></expression>
	</reference>
</view>

<view name="qa_mp_duplicates_name">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1760"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_mp_table nxt
where
	(select count(*) from ccdd_mp_table ct where ct.mp_formal_name = nxt.mp_formal_name) > 1
order by
	nxt.mp_formal_name
]]></expression>
	</reference>
</view>

<view name="qa_ntp_duplicates_code">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1820"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_ntp_table nxt
where
	(select count(*) from ccdd_ntp_table ct where ct.ntp_code = nxt.ntp_code) > 1
order by
	nxt.ntp_code
]]></expression>
	</reference>
</view>

<view name="qa_ntp_duplicates_name">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1860"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_ntp_table nxt
where
	(select count(*) from ccdd_ntp_table ct where ct.ntp_formal_name = nxt.ntp_formal_name) > 1
order by
	nxt.ntp_formal_name
]]></expression>
	</reference>
</view>

<view name="qa_tm_duplicates_code">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1900"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_tm_table nxt
where
	(select count(*) from ccdd_tm_table ct where ct.tm_code = nxt.tm_code) > 1
order by
	nxt.tm_code]]></expression>
	</reference>
</view>

<view name="qa_tm_duplicates_name">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1960"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_tm_table nxt
where
	(select count(*) from ccdd_tm_table ct where ct.tm_formal_name = nxt.tm_formal_name) > 1
order by
	nxt.tm_formal_name
]]></expression>
	</reference>
</view>

<view name="qa_missing_concepts_ntp">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2360" y="1540"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_ntp_table nxt
where
	nxt.ntp_code is null
order by
	nxt.ntp_formal_name
]]></expression>
	</reference>
</view>

<index name="dpd_drug_ingredient_option_drug_code" table="public.dpd_drug_ingredient_option"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="dpd_drug_code"/>
		</idxelement>
</index>

<view name="qa_missing_concepts_tm">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2400" y="1620"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_tm_table nxt
where
	nxt.tm_code is null
order by
	nxt.tm_formal_name
]]></expression>
	</reference>
</view>

<view name="qa_missing_concepts_dosage_form">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2400" y="1660"/>
	<reference>
		<expression><![CDATA[select
	dd.code as dpd_drug_code,
	dd.din,
	(select string_agg(cast(ddf.dpd_form_code as varchar), '|' order by ddf.dpd_form_code) from
		dpd_drug_form ddf
	where ddf.dpd_drug_code = dd.code) as dpd_form_code_combo,
	(select string_agg(df.name_en, ', ' order by ddf.dpd_form_code) from
		dpd_drug_form ddf left join dpd_form df on(df.code = ddf.dpd_form_code)
	where ddf.dpd_drug_code = dd.code) as dpd_form_name_combo,
	(select string_agg(cast(ddr.dpd_route_code as varchar), '|' order by ddr.dpd_route_code) from
		dpd_drug_route ddr
	where ddr.dpd_drug_code = dd.code) as dpd_route_code_combo,
	(select string_agg(dr.name_en, ', ' order by ddr.dpd_route_code) from
		dpd_drug_route ddr left join dpd_route dr on(dr.code = ddr.dpd_route_code)
	where ddr.dpd_drug_code = dd.code) as dpd_route_name_combo
from
	dpd_drug dd
	LEFT JOIN ccdd_drug_dosage_form ddform on(ddform.dpd_drug_code = dd.code)
where
	ddform.dosage_form is null
	AND
	exists(select * from
		ccdd_mp_table_candidate candidate
	where candidate.dpd_drug_code = dd.code)
	AND
	not exists(select * from
		ccdd_combination_product cp
	where cp.dpd_drug_code = dd.code)
]]></expression>
	</reference>
</view>

<view name="qa_missing_concepts_ingredient_stem">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2400" y="1700"/>
	<reference>
		<expression><![CDATA[select
	dd.code as dpd_drug_code,
	dd.din,
	ddio.dpd_named_ingredient_name,
	exists(select * from
		ccdd_combination_product cp
	where cp.dpd_drug_code = dd.code) as combination_product_defined
from
	dpd_drug dd
	INNER JOIN dpd_drug_ingredient_option AS ddio on (ddio.dpd_drug_code = dd.code)
	LEFT JOIN ccdd_dpd_ingredient_ntp_mapping ntpmap ON (ntpmap.dpd_named_ingredient_name = ddio.dpd_named_ingredient_name)
where ntpmap.ccdd_ntp_ingredient_name is null
order by dd.din
]]></expression>
	</reference>
</view>

<view name="qa_release_changes_mp_ntp_tm_relationship">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2140" y="1500"/>
	<reference>
		<expression><![CDATA[select
	cur.mp_code,
	cur.mp_formal_name,
	(CASE
		WHEN nxt.mp_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.mp_ntp_tm_relationship_release cur
	LEFT JOIN ccdd_mp_ntp_tm_relationship nxt ON(nxt.mp_code = cur.mp_code)
	LEFT JOIN LATERAL (VALUES
		('mp_formal_name', cur.mp_formal_name, nxt.mp_formal_name),
		('ntp_code', cur.ntp_code, CAST(nxt.ntp_code as varchar)),
		('ntp_formal_name', cur.ntp_formal_name, nxt.ntp_formal_name),
		('tm_code', cur.tm_code, CAST(nxt.tm_code as varchar)),
		('tm_formal_name', cur.tm_formal_name, nxt.tm_formal_name)
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.mp_code, cur.mp_formal_name, nxt.mp_code

UNION

select
	nxt.mp_code,
	nxt.mp_formal_name,
	'ADDED' as changes
from
	ccdd_mp_ntp_tm_relationship nxt
WHERE
	not exists(select * from ccdd.mp_ntp_tm_relationship_release cur where cur.mp_code = nxt.mp_code)]]></expression>
	</reference>
</view>

<index name="ccdd_tm_ingredient_stem_tm_code" table="public.ccdd_tm_ingredient_stem"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="0">
		<idxelement use-sorting="false">
			<column name="ccdd_tm_code"/>
		</idxelement>
</index>

<view name="qa_mp_ntp_tm_relationship_duplicates_code">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2400" y="1760"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_mp_ntp_tm_relationship nxt
where
	(select count(*) from ccdd_mp_ntp_tm_relationship ct where ct.mp_code = nxt.mp_code) > 1
order by
	nxt.mp_code
]]></expression>
	</reference>
</view>

<view name="qa_mp_ntp_tm_relationship_missing_rows">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2400" y="1800"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_mp_table nxt
where
	not exists(select * from ccdd_mp_ntp_tm_relationship rel where rel.mp_code = nxt.mp_code)
order by
	nxt.mp_formal_name
]]></expression>
	</reference>
</view>

<view name="qa_mp_ntp_tm_relationship_missing_parents">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2400" y="1840"/>
	<reference>
		<expression><![CDATA[select
	*
from
	ccdd_mp_ntp_tm_relationship nxt
where
	not exists(select * from ccdd_mp_table rel where rel.mp_code = nxt.mp_code)
order by
	nxt.mp_formal_name
]]></expression>
	</reference>
</view>

<view name="dpd_ingredient_source" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="840" y="1000"/>
	<reference table="dpd.active_ingredient" column="ingredient" alias="ai" column-alias="dpd_named_ingredient_name"/>
	<reference table="dpd.active_ingredient" column="active_ingredient_code" alias="ai" column-alias="dpd_active_ingredient_code_id"/>
	<reference table="dpd.active_ingredient" alias="ai"/>
	<reference>
		<expression><![CDATA[EXISTS(select * from public.dpd_drug_source ds where ds.code = ai.drug_code)]]></expression>
	</reference>
	<reference>
		<expression><![CDATA[GROUP BY dpd_named_ingredient_name, dpd_active_ingredient_code_id]]></expression>
	</reference>
	<expression type="select-exp">0,1</expression>
	<expression type="from-exp">2</expression>
	<expression type="simple-exp">3,4</expression>
</view>

<relationship name="rel_dpd_named_ingredient_source_cp_active_ingredient" type="reltv"
	 src-table="public.dpd_ingredient_source"
	 dst-table="dpd.active_ingredient"
	 src-required="false" dst-required="false">
	<label ref-type="name-label">
		<position x="0" y="0"/>
	</label>
</relationship>

<relationship name="dpd_drug_has_many_dpd_drug_schedule" type="rel1n"
	 src-col-pattern="{st}_{sc}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#7dab1e"
	 src-table="public.dpd_drug"
	 dst-table="public.dpd_drug_schedule"
	 src-required="false" dst-required="false">
	<label ref-type="src-label">
		<position x="1.58624" y="-1.2"/>
	</label>
</relationship>

<view name="qa_missing_concepts_pseudodin">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2480" y="1500"/>
	<reference>
		<expression><![CDATA[select
	nxt.din,
	nxt.mp_formal_name,
	p.dpd_drug_code as drug_code,
	p.unit as unit_of_presentation,
	p.size_amount as uop_size_amount,
	p.size_unit as uop_size_unit
from
	ccdd_mp_table_candidate nxt
	left join ccdd_presentation p on(p.id = nxt.ccdd_presentation_id)
where
	nxt.ccdd_presentation_id is not null
	and
	nxt.presentation_count > 1
	and
	nxt.pseudodin is null
order by
	nxt.dpd_drug_code
]]></expression>
	</reference>
</view>

<table name="tm_groupings">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2800" y="940"/>
	<column name="tm_code" not-null="true">
		<type name="bigint" length="0"/>
	</column>
	<column name="policy_type" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="policy_reference" not-null="true">
		<type name="varchar" length="0"/>
	</column>
</table>

<view name="ccdd_tm_special_groupings" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="2060"/>
	<reference>
		<expression><![CDATA[SELECT
	tsg.tm_code AS tm_code,
	tsg.policy_type AS policy_type,
	tsg.policy_reference AS policy_reference
FROM
	ccdd.tm_groupings tsg;]]></expression>
	</reference>
</view>

<view name="ccdd_mp_special_groupings" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="2020"/>
	<reference>
		<expression><![CDATA[SELECT
	msg.mp_code AS mp_code,
	msg.mp_formal_name AS mp_formal_name,
	msg.policy_type AS policy_type,
	msg.policy_reference AS policy_reference,
	msg.tm_is_publishable AS tm_is_publishable
FROM (
	(
		SELECT
			(CASE
				WHEN can.presentation_count > 1 THEN COALESCE(cast(can.pseudodin as varchar), can.ccdd_presentation_id)
				ELSE can.din
			END)::varchar AS mp_code,
			can.mp_formal_name AS mp_formal_name,
			sch.policy_type AS policy_type,
			can.tm_is_publishable AS tm_is_publishable,
			'http://laws-lois.justice.gc.ca/eng/acts/C-38.8/FullText.html'::varchar AS policy_reference
		FROM
			ccdd_drug_schedule sch
			INNER JOIN ccdd_mp_table_candidate can
			ON sch.dpd_drug_code = can.dpd_drug_code
	)
	UNION
	(
		SELECT
			(CASE
				WHEN can.presentation_count > 1 THEN COALESCE(cast(can.pseudodin as varchar), can.ccdd_presentation_id)
				ELSE can.din
			END)::varchar AS mp_code,
			can.mp_formal_name AS mp_formal_name,
			tsg.policy_type AS policy_type,
			can.tm_is_publishable AS tm_is_publishable,
			tsg.policy_reference AS policy_reference
		FROM
			ccdd_tm_special_groupings tsg
			JOIN ccdd_drug_tm cdt ON cdt.tm_code = tsg.tm_code
			JOIN ccdd_mp_table_candidate can ON can.dpd_drug_code = cdt.dpd_drug_code
	)
) msg;]]></expression>
	</reference>
</view>

<view name="ccdd_special_groupings" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1580" y="2100"/>
	<reference>
		<expression><![CDATA[SELECT
	csg.ccdd_code,
	csg.ccdd_formal_name,
	csg.ccdd_type,
	csg.policy_type,
	csg.policy_reference,
	csg.tm_is_publishable,
	'active'::text AS special_groupings_status,
	'20170919'::text AS special_groupings_status_effective_time
FROM (
	(
		SELECT DISTINCT
			reltm.tm_code::varchar AS ccdd_code,
			reltm.tm_formal_name AS ccdd_formal_name,
			CAST('TM' AS varchar) AS ccdd_type,
			policy_type AS policy_type,
			reltm.tm_is_publishable AS tm_is_publishable,
			policy_reference AS policy_reference
		FROM
			ccdd_mp_special_groupings msg
			JOIN (
				SELECT
					rel.tm_code,
					rel.tm_formal_name,
					rel.mp_code,
					rel.tm_is_publishable
				FROM ccdd_mp_ntp_tm_relationship rel
			) reltm ON reltm.mp_code = msg.mp_code
	)
	UNION ALL
	(
		SELECT DISTINCT
			relntp.ntp_code::varchar AS ccdd_code,
			relntp.ntp_formal_name AS ccdd_formal_name,
			CAST('NTP' AS varchar) AS ccdd_type,
			msg.policy_type AS policy_type,
			relntp.tm_is_publishable AS tm_is_publishable,
			msg.policy_reference AS policy_reference
		FROM
			ccdd_mp_special_groupings msg
			JOIN (
				SELECT
					rel.ntp_code,
					rel.ntp_formal_name,
					rel.mp_code,
					rel.tm_is_publishable
				FROM ccdd_mp_ntp_tm_relationship rel
			) relntp ON relntp.mp_code = msg.mp_code
	)
	UNION ALL
	(
		SELECT
			msg.mp_code AS ccdd_code,
			msg.mp_formal_name AS ccdd_formal_name,
			CAST('MP' AS varchar) AS ccdd_type,
			msg.policy_type AS policy_type,
			msg.tm_is_publishable AS tm_is_publishable,
			msg.policy_reference AS policy_reference
		FROM
			ccdd_mp_special_groupings msg
	)
) csg;]]></expression>
	</reference>
</view>

<table name="ccdd_config" sql-disabled="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1640" y="840"/>
	<column name="ccdd_date">
		<type name="date" length="0"/>
	</column>
	<column name="dpd_extract_date">
		<type name="date" length="0"/>
	</column>
</table>

<table name="mp_release_candidate">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2500" y="580"/>
	<column name="mp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="mp_en_description">
		<type name="text" length="0"/>
	</column>
	<column name="mp_fr_description">
		<type name="text" length="0"/>
	</column>
	<column name="mp_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_type">
		<type name="varchar" length="0"/>
	</column>
	<column name="Health_Canada_identifier">
		<type name="text" length="0"/>
	</column>
	<column name="Health_Canada_product_name">
		<type name="text" length="0"/>
	</column>
</table>

<table name="mp_ntp_tm_relationship_release_candidate">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2800" y="820"/>
	<column name="mp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="mp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="tm_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_formal_name">
		<type name="text" length="0"/>
	</column>
</table>

<table name="tm_release_candidate">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2840" y="720"/>
	<column name="tm_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="tm_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
</table>

<table name="ntp_release_candidate">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2840" y="580"/>
	<column name="ntp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_en_description">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_fr_description">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_type">
		<type name="varchar" length="0"/>
	</column>
</table>

<view name="ccdd_mp_release_candidate" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1760" y="1720"/>
	<reference>
		<expression><![CDATA[SELECT
	mp_code,
	mp_formal_name,
	mp_en_description,
	mp_fr_description,
	mp_status,
	mp_status_effective_time,
	mp_type,
	"Health_Canada_identifier",
	"Health_Canada_product_name"
FROM ccdd_mp_table
WHERE tm_is_publishable = true]]></expression>
	</reference>
</view>

<view name="qa_release_changes_mp_release_candidate">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1940" y="1720"/>
	<reference>
		<expression><![CDATA[SELECT
	cur.mp_code,
	cur.mp_formal_name,
	(CASE
		WHEN nxt.mp_code IS NULL THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value IS NOT NULL THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) AS changes
FROM
	ccdd.mp_release_candidate cur
	LEFT JOIN ccdd_mp_release_candidate nxt ON(nxt.mp_code = cur.mp_code)
	LEFT JOIN LATERAL (VALUES
		('mp_formal_name', cur.mp_formal_name, nxt.mp_formal_name),
		('mp_status', UPPER(cur.mp_status), UPPER(nxt.mp_status)),
		('mp_status_effective_time', cur.mp_status_effective_time, nxt.mp_status_effective_time),
		('mp_type', cur.mp_type, nxt.mp_type),
		('Health_Canada_identifier', cur."Health_Canada_identifier", nxt."Health_Canada_identifier"),
		('Health_Canada_product_name', cur."Health_Canada_product_name", nxt."Health_Canada_product_name")
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value IS DISTINCT FROM cmp.nxt_value
GROUP BY cur.mp_code, cur.mp_formal_name, nxt.mp_code

UNION

SELECT
	nxt.mp_code,
	nxt.mp_formal_name,
	'ADDED' AS changes
FROM
	ccdd_mp_release_candidate nxt
WHERE
	NOT EXISTS(SELECT * FROM ccdd.mp_release_candidate cur WHERE cur.mp_code = nxt.mp_code)
]]></expression>
	</reference>
</view>

<view name="ccdd_ntp_release_candidate" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1760" y="1800"/>
	<reference>
		<expression><![CDATA[SELECT
	ntp_code,
	ntp_formal_name,
	ntp_status,
	ntp_status_effective_time,
	ntp_type
FROM ccdd_ntp_table
WHERE tm_is_publishable = true]]></expression>
	</reference>
</view>

<view name="qa_release_changes_ntp_release_candidate">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2280" y="1620"/>
	<reference>
		<expression><![CDATA[select
	cur.ntp_code,
	cur.ntp_formal_name,
	(CASE
		WHEN nxt.ntp_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.ntp_release_candidate cur
	LEFT JOIN ccdd_ntp_release_candidate nxt ON(cur.ntp_code = CAST(nxt.ntp_code AS varchar))
	LEFT JOIN LATERAL (VALUES
		('ntp_formal_name', cur.ntp_formal_name, nxt.ntp_formal_name),
		('ntp_status', UPPER(cur.ntp_status), UPPER(nxt.ntp_status)),
		('ntp_status_effective_time', cur.ntp_status_effective_time, nxt.ntp_status_effective_time),
		('ntp_type', cur.ntp_type, COALESCE(nxt.ntp_type, 'NA'))
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.ntp_code, cur.ntp_formal_name, nxt.ntp_code

UNION

select
	CAST(nxt.ntp_code AS varchar) as ntp_code,
	nxt.ntp_formal_name,
	'ADDED' as changes
from
	ccdd_ntp_release_candidate nxt
WHERE
	not exists(select * from ccdd.ntp_release_candidate cur where cur.ntp_code = CAST(nxt.ntp_code AS varchar))
]]></expression>
	</reference>
</view>

<view name="ccdd_tm_release_candidate" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1760" y="1880"/>
	<reference>
		<expression><![CDATA[SELECT
	tm_code,
	tm_formal_name,
	tm_status,
	tm_status_effective_time
FROM
	ccdd_tm_table
WHERE tm_is_publishable = true;
]]></expression>
	</reference>
</view>

<view name="qa_release_changes_tm_release_candidate">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2180" y="1660"/>
	<reference>
		<expression><![CDATA[select
	cur.tm_code,
	cur.tm_formal_name,
	(CASE
		WHEN nxt.tm_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.tm_release_candidate cur
	LEFT JOIN ccdd_tm_release_candidate nxt ON(cur.tm_code = CAST(nxt.tm_code AS varchar))
	LEFT JOIN LATERAL (VALUES
		('tm_formal_name', cur.tm_formal_name, nxt.tm_formal_name),
		('tm_status', UPPER(cur.tm_status), UPPER(nxt.tm_status)),
		('tm_status_effective_time', cur.tm_status_effective_time, nxt.tm_status_effective_time)
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.tm_code, cur.tm_formal_name, nxt.tm_code

UNION

select
	CAST(nxt.tm_code AS varchar) as tm_code,
	nxt.tm_formal_name,
	'ADDED' as changes
from
	ccdd_tm_release_candidate nxt
WHERE
	not exists(select * from ccdd.tm_release_candidate cur where cur.tm_code = CAST(nxt.tm_code AS varchar))
]]></expression>
	</reference>
</view>

<view name="ccdd_mp_ntp_tm_relationship_release_candidate" materialized="true">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1860" y="1880"/>
	<reference>
		<expression><![CDATA[select
	mp_code,
	mp_formal_name,
	ntp_code,
	ntp_formal_name,
	tm_code,
	tm_formal_name
FROM
	ccdd_mp_ntp_tm_relationship
WHERE tm_is_publishable = true
]]></expression>
	</reference>
</view>

<view name="qa_release_changes_mp_ntp_tm_relationship_release_candidate">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2140" y="1500"/>
	<reference>
		<expression><![CDATA[select
	cur.mp_code,
	cur.mp_formal_name,
	(CASE
		WHEN nxt.mp_code is null THEN 'DELETED'
		ELSE string_agg(FORMAT(
			'%s: "%s" -> %s',
			cmp.field_name,
			cmp.cur_value,
			(CASE WHEN cmp.nxt_value is not null THEN FORMAT('"%s"', cmp.nxt_value) ELSE 'NULL' END)
		), E'\n' ORDER BY cmp.field_name)
	END) as changes
from
	ccdd.mp_ntp_tm_relationship_release_candidate cur
	LEFT JOIN ccdd_mp_ntp_tm_relationship_release_candidate nxt ON(nxt.mp_code = cur.mp_code)
	LEFT JOIN LATERAL (VALUES
		('mp_formal_name', cur.mp_formal_name, nxt.mp_formal_name),
		('ntp_code', cur.ntp_code, CAST(nxt.ntp_code as varchar)),
		('ntp_formal_name', cur.ntp_formal_name, nxt.ntp_formal_name),
		('tm_code', cur.tm_code, CAST(nxt.tm_code as varchar)),
		('tm_formal_name', cur.tm_formal_name, nxt.tm_formal_name)
	) AS cmp (
		field_name, cur_value, nxt_value
	) ON true
WHERE
	cmp.cur_value is distinct from cmp.nxt_value
GROUP BY cur.mp_code, cur.mp_formal_name, nxt.mp_code

UNION

select
	nxt.mp_code,
	nxt.mp_formal_name,
	'ADDED' as changes
from
	ccdd_mp_ntp_tm_relationship_release_candidate nxt
WHERE
	not exists(select * from ccdd.mp_ntp_tm_relationship_release_candidate cur where cur.mp_code = nxt.mp_code)]]></expression>
	</reference>
</view>

<table name="ntp_full_release">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2860" y="600"/>
	<column name="ntp_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_en_description">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_fr_description">
		<type name="text" length="0"/>
	</column>
	<column name="ntp_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
	<column name="ntp_type">
		<type name="varchar" length="0"/>
	</column>
</table>

<table name="tm_full_release">
	<schema name="ccdd"/>
	<role name="postgres"/>
	<position x="2860" y="740"/>
	<column name="tm_code">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_formal_name">
		<type name="text" length="0"/>
	</column>
	<column name="tm_status">
		<type name="varchar" length="0"/>
	</column>
	<column name="tm_status_effective_time">
		<type name="varchar" length="0"/>
	</column>
</table>

<view name="qa_new_concepts_ntp">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2700" y="1500"/>
	<reference>
		<expression><![CDATA[SELECT 
	((SELECT max(ntd.code) FROM ccdd.ntp_definition ntd)) + (row_number() OVER ()) AS ntp_code,
	mcn.ntp_formal_name
FROM qa_missing_concepts_ntp mcn;]]></expression>
	</reference>
</view>

<view name="qa_new_concepts_ntp_test">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2720" y="1520"/>
	<reference>
		<expression><![CDATA[SELECT
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_ntp ncn 
		WHERE EXISTS(SELECT * FROM ccdd.ntp_definition ntpd WHERE ntpd.code = ncn.ntp_code)
	) AS draft_overlap_codes,
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_ntp ncn 
		WHERE EXISTS(SELECT * FROM ccdd.ntp_definition ntpd WHERE ntpd.formal_name = ncn.ntp_formal_name)
	) AS draft_overlap_names,
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_ntp ncn 
		WHERE EXISTS(SELECT * FROM ccdd.ntp_full_release nfr WHERE CAST(nfr.ntp_code AS bigint) = ncn.ntp_code)
	) AS release_overlap_codes,
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_ntp ncn 
		WHERE EXISTS(SELECT * FROM ccdd.ntp_full_release nfr WHERE nfr.ntp_formal_name = ncn.ntp_formal_name)
	) AS release_overlap_names]]></expression>
	</reference>
</view>

<view name="qa_new_concepts_pseudodin">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2700" y="1560"/>
	<reference>
		<expression><![CDATA[SELECT 
	((SELECT max(psm.pseudodin) FROM ccdd.pseudodin_map psm)) + (row_number() OVER ()) AS pseudodin,
	mcp.drug_code,
	mcp.unit_of_presentation,
	CAST(mcp.uop_size_amount AS varchar),
	mcp.uop_size_unit
FROM qa_missing_concepts_pseudodin mcp;]]></expression>
	</reference>
</view>

<view name="qa_new_concepts_pseudodin_test">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2720" y="1580"/>
	<reference>
		<expression><![CDATA[SELECT
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_pseudodin ncp 
		WHERE EXISTS(SELECT * FROM ccdd.pseudodin_map psm WHERE psm.pseudodin = ncp.pseudodin)
	) AS draft_overlap_pseudodin
	]]></expression>
	</reference>
</view>

<view name="qa_new_concepts_tm">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2700" y="1620"/>
	<reference>
		<expression><![CDATA[SELECT 
	((SELECT max(tmd.code) FROM ccdd.tm_definition tmd)) + (row_number() OVER ()) AS tm_code,
	mct.tm_formal_name
FROM qa_missing_concepts_tm mct;]]></expression>
	</reference>
</view>

<view name="qa_new_concepts_tm_test">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2720" y="1640"/>
	<reference>
		<expression><![CDATA[SELECT
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_tm nct 
		WHERE EXISTS(SELECT * FROM ccdd.tm_definition tmd WHERE tmd.code = nct.tm_code)
	) AS draft_overlap_codes,
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_tm nct
		WHERE EXISTS(SELECT * FROM ccdd.tm_definition tmd WHERE tmd.formal_name = nct.tm_formal_name)
	) AS draft_overlap_names,
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_tm nct 
		WHERE EXISTS(SELECT * FROM ccdd.tm_full_release tfr WHERE CAST(tfr.tm_code AS bigint) = nct.tm_code)
	) AS release_overlap_codes,
	(
		SELECT COUNT(*) 
		FROM qa_new_concepts_tm nct 
		WHERE EXISTS(SELECT * FROM ccdd.tm_full_release tfr WHERE tfr.tm_formal_name = nct.tm_formal_name)
	) AS release_overlap_names]]></expression>
	</reference>
</view>

<constraint name="active_ingredient_drug_code_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="dpd.drug_product" sql-disabled="true" table="dpd.active_ingredient">
	<columns names="extract,drug_code" ref-type="src-columns"/>
	<columns names="extract,drug_code" ref-type="dst-columns"/>
</constraint>

<constraint name="companies_drug_code_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="dpd.drug_product" sql-disabled="true" table="dpd.companies">
	<columns names="extract,drug_code" ref-type="src-columns"/>
	<columns names="extract,drug_code" ref-type="dst-columns"/>
</constraint>

<constraint name="pharmaceutical_form_drug_code_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="dpd.drug_product" sql-disabled="true" table="dpd.pharmaceutical_form">
	<columns names="extract,drug_code" ref-type="src-columns"/>
	<columns names="extract,drug_code" ref-type="dst-columns"/>
</constraint>

<constraint name="route_drug_code_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="dpd.drug_product" sql-disabled="true" table="dpd.route">
	<columns names="extract,drug_code" ref-type="src-columns"/>
	<columns names="extract,drug_code" ref-type="dst-columns"/>
</constraint>

<constraint name="status_drug_code_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="dpd.drug_product" sql-disabled="true" table="dpd.status">
	<columns names="extract,drug_code" ref-type="src-columns"/>
	<columns names="extract,drug_code" ref-type="dst-columns"/>
</constraint>

<constraint name="schedule_drug_code_fkey" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="dpd.drug_product" sql-disabled="true" table="dpd.schedule">
	<columns names="drug_code" ref-type="src-columns"/>
	<columns names="drug_code" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_active_ingredient_drug_product" type="relfk"
	 src-table="dpd.active_ingredient"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

<relationship name="rel_companies_drug_product" type="relfk"
	 src-table="dpd.companies"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

<relationship name="rel_pharmaceutical_form_drug_product" type="relfk"
	 src-table="dpd.pharmaceutical_form"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

<relationship name="rel_route_drug_product" type="relfk"
	 src-table="dpd.route"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

<relationship name="rel_status_drug_product" type="relfk"
	 src-table="dpd.status"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

<relationship name="rel_schedule_drug_product" type="relfk"
	 src-table="dpd.schedule"
	 dst-table="dpd.drug_product"
	 src-required="false" dst-required="false"/>

</dbmodel>
